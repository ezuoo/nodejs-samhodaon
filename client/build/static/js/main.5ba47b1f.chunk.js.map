{"version":3,"sources":["components/views/NavBar/Sections/LeftMenu.js","components/views/NavBar/NavBar.js","components/views/Footer/Footer.js","components/views/page/DaonPage/DaonPage.js","components/image/test2.jpg","components/views/commons/GridCard.js","components/views/commons/BodyTop.js","components/views/page/CasePage/Section/SideBar.js","components/views/page/CasePage/CaseManyPage.js","components/views/page/CasePage/CaseOnePage.js","components/views/page/LandingPage/LandingPage.js","components/views/page/Noticepage/NoticePage.js","components/views/page/OrderPage/OrderPage.js","_actions/types.js","components/Config.js","components/views/page/LoginPage/LoginPage.js","_actions/user_actions.js","components/views/commons/ErrorPage.js","hoc/auth.js","components/User.js","components/views/page/AdminPage/Section/Nav.js","components/views/page/AdminPage/Section/Sider.js","components/views/page/AdminPage/AdminLandingPage.js","components/views/page/AdminPage/ElementComponents/Load.js","components/views/commons/Notifications.js","components/views/page/AdminPage/ElementComponents/List.js","components/views/page/AdminPage/AdminElementPage.js","components/views/page/AdminPage/CaseComponents/Load.js","components/views/page/AdminPage/CaseComponents/Null.js","components/views/page/AdminPage/CaseComponents/List.js","components/views/page/AdminPage/CaseComponents/Item.js","components/views/page/AdminPage/CaseComponents/Form-Select.js","components/views/page/AdminPage/CaseComponents/ImageUpload.js","components/views/page/AdminPage/CaseComponents/Form.js","components/views/page/AdminPage/CaseComponents/Add.js","components/views/page/AdminPage/CaseComponents/Edit.js","components/views/page/AdminPage/AdminCasePage.js","components/views/page/AdminPage/SlideComponents/Load.js","components/views/page/AdminPage/SlideComponents/ImageSlider.js","components/views/page/AdminPage/SlideComponents/ImageUpload.js","components/views/page/AdminPage/SlideComponents/List.js","components/views/page/AdminPage/AdminSlidePage.js","components/views/page/AdminPage/OrderComponents/Load.js","components/views/page/AdminPage/OrderComponents/Null.js","components/views/page/AdminPage/OrderComponents/List.js","components/views/page/AdminPage/OrderComponents/Item.js","components/views/page/AdminPage/AdminOrderPage.js","components/views/page/AdminPage/NoticeComponents/Load.js","components/views/page/AdminPage/NoticeComponents/Null.js","components/views/page/AdminPage/NoticeComponents/List.js","components/views/page/AdminPage/NoticeComponents/Item.js","components/views/page/AdminPage/NoticeComponents/Add.js","components/views/page/AdminPage/NoticeComponents/Edit.js","components/views/page/AdminPage/AdminNoticePage.js","components/views/page/AdminPage/ErrorPage.js","components/Admin.js","components/App.js","serviceWorker.js","_reducers/index.js","_reducers/user_reducer.js","index.js"],"names":["React","memo","withRouter","props","mode","Item","to","NavBar","useState","visible","setVisible","className","href","type","onClick","AlignRightOutlined","title","placement","closable","onClose","Text","Typography","Footer","strong","kakao","window","DaonPage","useEffect","container","document","getElementById","options","center","maps","LatLng","level","map","Map","markerPosition","Marker","position","setMap","id","Meta","Card","GridCard","url","casedata","_id","lg","md","xs","style","hoverable","width","cover","alt","src","test","description","info","BodyTop","dataSource","setDataSource","fetchData","a","axios","get","data","response","image","dots","autoplay","height","v","i","menuData","toKR","name","styles","backgroundColor","overflow","arr","SideBar","elements","setElements","selectedTags","setSelectedTags","param","setParam","fetchElements","useCallback","ret","onTagChange","menu","tag","checked","nextSelectedTags","filter","t","queryString","Object","keys","indexOf","entries","key","value","splice","length","reduce","str","encodeURIComponent","join","objectToQuerystring","then","res","setCaseData","useLayoutEffect","inlineIndent","index","SubMenu","borderBottom","element","CheckableTag","onChange","marginLeft","fontSize","CaseManyPage","CaseData","Content","span","gutter","cases","Fragment","CaseOnePage","html","match","params","caseId","success","message","error","msg","history","back","margin","size","layout","bordered","label","division","area","office","color","x","section","status","best","text","date","textAlign","dangerouslySetInnerHTML","content","__html","DOMPurify","sanitize","LandingPage","NoticePage","loading","setLoading","result","undefined","columns","dataIndex","align","render","padding","pagination","expandable","expandedRowRender","record","rowExpandable","no","expandRowByClick","modalStyle","OrderPage","address","setAddress","handleOpenPost","labelCol","wrapperCol","onFinish","values","post","console","log","requiredMark","hasFeedback","rules","required","whitespace","placeholder","Option","ExclamationCircleOutlined","QuestionCircleOutlined","TextArea","offset","htmlType","centered","onCancel","footer","onComplete","AllAddress","extraAddress","addressType","bname","buildingName","LOGIN_USER","REGISTER_USER","AUTH_USER","LOGOUT_USER","USER_SERVER","Title","dispatch","useDispatch","formErrorMessage","setFormErrorMessage","initialValues","adminId","password","validationSchema","Yup","shape","min","onSubmit","setSubmitting","setTimeout","dataToSubmit","request","payload","loginUser","loginSuccess","localStorage","setItem","userId","push","catch","err","touched","errors","isSubmitting","handleChange","handleBlur","handleSubmit","prefix","UserOutlined","onBlur","marginTop","LockOutlined","border","borderRadius","minWidth","disabled","ErrorPage","fn","SpecificComponent","option","user","useSelector","state","auth","isAuth","NewLandingPaga","Auth","NewDaonPage","NewCaseManyPage","NewCaseOnePage","NewNoticePage","NewOrderPage","NewLoginPage","LoginPage","User","exact","path","component","AdminPageNav","Header","PieChartOutlined","AdminPage","header","renderItem","item","Load","minHeight","display","justifyContent","alignItems","tip","openNotificationWithIcon","notification","List","Form","useForm","form","count","setCount","editingKey","setEditingKey","EditableContext","createContext","isEditing","query","patch","Notifications","delete","field","setUpData","newData","category","handleSave","validateFields","row","findIndex","handleCancel","mergedColumns","editable","_","setFieldsValue","handleEdit","onConfirm","handleDelete","col","onCell","editing","components","body","datas","Provider","cell","children","restProps","inputRef","useRef","childNode","ref","rowClassName","cnt","icon","PlusOutlined","AdminElementPage","view","setView","filteredData","SlidersOutlined","tabName","TabPane","tab","Null","SmileOutlined","visibilityHeight","hover","actions","EditOutlined","setRow","DeleteOutlined","Modal","confirm","okText","okType","cancelText","onOk","scrollTo","handleRemove","handleItem","onPointerEnter","setHover","onPointerLeave","settings","customPaging","dotsClass","infinite","speed","slidesToShow","slidesToScroll","AppstoreOutlined","TestSelect","default","selectArray","setSelectArray","renderJsx","FormControl","variant","marginBottom","errorCheck","InputLabel","Select","labelId","e","target","input","Input","multiple","renderValue","selected","Chip","MenuItem","defaultValue","control","validate","ImageUpload","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","imagePath","setImagePath","uid","split","fileList","setFileList","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","handlePreview","preview","originFileObj","substring","lastIndexOf","onPreview","onRemove","newFileList","slice","newImagePath","listType","beforeUpload","formData","FormData","append","setImage","radio","TestForm","handleValue","TextField","helperText","RadioGroup","aria-label","FormControlLabel","Radio","Checkbox","Add","setErrorCheck","EditorState","createEmpty","editorState","setEditorState","editorImage","setEditorImage","uploadImageCallBack","uploadedImages","imageObject","localSrc","link","oldData","toolbar","inline","list","inDropdown","uploadCallback","defaultSize","inputAccept","toolbarStyle","localization","locale","draftToHtml","convertToRaw","getCurrentContent","onEditorStateChange","Edit","createWithContent","ContentState","createFromBlockArray","htmlToDraft","contentBlocks","r","ArrowDownOutlined","AdminCasePage","fetchCases","ImageSlider","limit","setLimit","max","CheckOutlined","fetchImage","AdminSlidePage","setNo","JSON","parse","contact","email","expected_date","expected_price","papering","flooring","finishing_material","light","furniture","tile","bathroom","expansion","chassis","woodwork","artwall","etc","styling","qna","AdminOrderPage","initialValue","AdminNoticePage","useHistory","subTitle","extra","slides","notice","orders","Admin","Nav","Sider","AdminLandingPage","App","IsAdmin","setIsAdmin","pathname","useLocation","checkAdmin","fallback","Boolean","location","hostname","rootReducer","combineReducers","action","register","loginSucces","userData","createStoreWithMiddleware","applyMiddleware","promiseMiddleware","ReduxThunk","createStore","ReactDOM","store","Reducer","__REDUX_DEVTOOLS_EXTENSION__","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5ba47b1f.chunk.js","sourcesContent":["import React from 'react';\nimport { Menu } from 'antd';\nimport { withRouter, Link } from 'react-router-dom';\n\nfunction LeftMenu(props) {\n  return (\n    <Menu mode={props.mode}>\n      <Menu.Item key=\"home\">\n        <Link to=\"/\">메인</Link>\n      </Menu.Item>\n      <Menu.Item key=\"intro\">\n        <Link to=\"/daon\">회사소개</Link>\n      </Menu.Item>\n      <Menu.Item key=\"cases\">\n        <Link to=\"/cases\">시공사례</Link>\n      </Menu.Item>\n      <Menu.Item key=\"notice\">\n        <Link to=\"/notice\">공지사항</Link>\n      </Menu.Item>\n      <Menu.Item key=\"order\">\n        <Link to=\"/order\">견적문의</Link>\n      </Menu.Item>\n    </Menu>\n  );\n}\n\nexport default React.memo(withRouter(LeftMenu))","import React, { useState } from 'react';\nimport LeftMenu from './Sections/LeftMenu';\n\nimport { Drawer, Button } from 'antd';\nimport {AlignRightOutlined} from '@ant-design/icons';\nimport './Sections/Navbar.css';\n\nfunction NavBar() {\n  const [visible, setVisible] = useState(false)\n\n  const showDrawer = () => {\n    setVisible(true)\n  };\n\n  const onClose = () => {\n    setVisible(false)\n  };\n  \n  return (\n    \n      <nav className=\"menu\">\n        <div className=\"menu__logo\">\n          <a href=\"/\">DAON</a>\n        </div>\n        <div className=\"menu__container\">\n          <div className=\"menu_left\">\n            <LeftMenu mode=\"horizontal\" />\n          </div>{/* \n          <div className=\"menu_rigth\">\n            <RightMenu mode=\"horizontal\" />\n          </div> */}\n          <Button className=\"menu__mobile-button\" type=\"primary\" onClick={showDrawer}>\n            <AlignRightOutlined />\n          </Button>\n          <Drawer title=\"Basic Drawer\" placement=\"right\" className=\"menu_drawer\" closable={false} onClose={onClose} visible={visible}>\n            <LeftMenu mode=\"inline\" />\n            {/* <RightMenu mode=\"inline\" /> */}\n          </Drawer>\n        </div>\n      </nav>\n    \n  )\n}\n\nexport default React.memo(NavBar)","import React from 'react'\nimport { Typography } from 'antd';\n\nconst { Text } = Typography;\n\nfunction Footer() {\n\n  \n\n    return (\n        <div className='user-layout-footer-content'>\n            <Text strong>다온 인테리어</Text>\n            <Text>대표자명 : 정재민</Text> \n            <Text>주소 : 경기 안양시 동안구 관평로 138번길 53 초원부영상가 1층</Text>\n            <Text>사업자 등록번호 : 123-45-678910</Text> \n            <Text>Copyright (c) 2021 DAON interior, Ltd. All Right Reserved.</Text>\n        </div>\n    )\n}\n\nexport default Footer\n","import React from \"react\";\r\n\r\nconst { kakao } = window;\r\n\r\nfunction DaonPage() {\r\n  React.useEffect(() => {\r\n    const container = document.getElementById('map');\r\n    const options = { center: new kakao.maps.LatLng(37.39061345388657, 126.9650789389364), level: 3};\r\n    const map = new kakao.maps.Map(container, options);\r\n    \r\n    var markerPosition  = new kakao.maps.LatLng(37.39061345388657, 126.9650789389364); \r\n    var marker = new kakao.maps.Marker({position: markerPosition});\r\n    marker.setMap(map);\r\n\r\n  }, []);\r\n\r\n \r\n  return (\r\n    <>\r\n      <div>\r\n          <div className='user-daon-container'>\r\n              <div className='user-daon-top-image'>\r\n                  <span>Image</span>\r\n              </div>\r\n\r\n              <h2>회사 소개</h2>\r\n              <hr />\r\n              \r\n              <div className='user-daon-content'>\r\n                <p>\r\n                저희 다온인테리어는 약 20년간의 경험을 바탕으로 클라이언트와 협의를 통해 책임시공 하며 결과물로 보여드리고 있습니다.\r\n                </p>\r\n                <br />\r\n                <p>인테리어 공사는 한 사람 인생에 평균 한, 두번 발생하는 큰 일중에 하나 입니다. </p>\r\n                \r\n                <br />\r\n                <p>누구에게나 꾸미고 싶은 집의 모습과 로망을 듣고 방향성을 제시하고 함께 상의하며 갈피를 잡아드리겠습니다.</p>\r\n                \r\n                <br />\r\n                <p>한 번의 공사로 평생을 깔끔하게, 누구보다 꼼꼼하고 최고의 만족을 위해 최선을 다하겠습니다.</p>\r\n              </div>\r\n              \r\n              <div className='user-daon-map-container'>\r\n                <div className='user-daon-map-content' id='map'>\r\n                </div>\r\n              </div>\r\n              \r\n              <br />\r\n          </div>\r\n      </div>\r\n        \r\n    </>\r\n  );\r\n}\r\n\r\nexport default DaonPage;\r\n","export default __webpack_public_path__ + \"static/media/test2.20c3c059.jpg\";","import React from 'react'\r\nimport {Col, Card} from 'antd'\r\nimport test from '../../image/test2.jpg'\r\n\r\nconst { Meta } = Card;\r\n\r\nfunction GridCard(props) {\r\n    let url = `/cases/${props.casedata._id}`;\r\n    return (\r\n            <Col lg={6} md={8} xs={24}>\r\n                <div style={{ position: 'relative' }}>\r\n                <a href={url}>\r\n                <Card hoverable style={{ width: '100%' }} cover={ <img alt=\"example\" src={test} />}>\r\n                   <Meta title= {props.casedata.title} description={props.casedata.info} />\r\n                 </Card>\r\n                 </a>\r\n                </div>\r\n            </Col>\r\n            \r\n    )\r\n}\r\n\r\nexport default React.memo(GridCard)\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\nimport {Carousel} from 'antd'\r\n\r\nimport '../../css/user.css';\r\n\r\nfunction BodyTop() {\r\n  const [dataSource, setDataSource] = React.useState(null);\r\n\r\n  const fetchData = async () => {\r\n    const response = await (await axios.get('/api/slides')).data;\r\n    \r\n    setDataSource(response.data[0].image);\r\n  }\r\n\r\n  React.useState(() => {\r\n    fetchData();\r\n  },[]);\r\n   \r\n  return (\r\n    <div>\r\n      {dataSource !== null && (\r\n        <Carousel dots={false} autoplay style={{width: \"100%\",height: \"350px\"}}>\r\n        {dataSource.map((v,i) => {\r\n            return (<div key={i}>\r\n              <img src={v} alt={i} style={{width: '100%', height: '350px'}}/>\r\n            </div>);\r\n        })}\r\n        </Carousel>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default React.memo(BodyTop);\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { Menu,Tag, Typography } from 'antd';\r\n\r\n\r\nconst menuData = ['area', 'color', 'division', 'section', 'style'];\r\n\r\nconst toKR = (name) => {\r\n    switch (name) {\r\n        case 'division':\r\n            return '공간'\r\n        case 'color':\r\n            return '색상'\r\n        case 'area':\r\n            return '평수'\r\n        case 'style':\r\n            return '스타일'\r\n        case 'section':\r\n            return '영역'\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nconst styles = { backgroundColor: 'white', overflow: 'auto' };\r\n\r\nlet arr = [];\r\n\r\nfunction SideBar(props) {\r\n    const [elements, setElements] = React.useState();\r\n    const [selectedTags, setSelectedTags] = React.useState([]);\r\n    const [param, setParam] = React.useState([]);\r\n\r\n    const fetchElements = React.useCallback(async () => {\r\n        const ret = await axios.get('/api/elements');\r\n        setElements(ret.data.data[0]);\r\n      }, []);\r\n    \r\n    const objectToQuerystring =  (menu, tag, checked) => {\r\n        if (checked) {\r\n            arr[menu] = Object.keys(param).indexOf(menu) !== -1 ? [...param[menu], tag] : [tag];\r\n             setParam(arr);\r\n          } else {\r\n            for (let [key, value] of Object.entries(arr)) {\r\n              if (menu === key) {\r\n                value.splice(value.indexOf(tag), 1);\r\n                value.length === 0 ? delete arr[menu] : arr[menu] = value;\r\n                 setParam(arr);\r\n              }\r\n            }\r\n          }\r\n        return Object.keys(arr).reduce(function (str, key, i) {\r\n        var delimiter, val;\r\n        delimiter = (i === 0) ? '?' : '&';\r\n        key = encodeURIComponent(key);\r\n        val = encodeURIComponent(arr[key]);\r\n        return [str, delimiter, key, '=', val].join('');\r\n        }, '');\r\n\r\n    }\r\n   \r\n    const onTagChange =  (menu, tag, checked) => { /** if tag is checked, fetch case data */\r\n        const nextSelectedTags = checked ? [...selectedTags, tag] : selectedTags.filter(t => t !== tag);\r\n        const queryString =  objectToQuerystring(menu, tag, checked);\r\n\r\n        setSelectedTags(nextSelectedTags);    \r\n        axios.get('/api/cases' + queryString).then( res => props.setCaseData(res.data.data));    \r\n    }\r\n\r\n\r\n    React.useLayoutEffect(() => {\r\n        fetchElements();\r\n    }, [fetchElements]);\r\n    \r\n    return (\r\n            <Menu mode=\"inline\" className='user-cases-row-left' inlineIndent={1}>\r\n               {elements && \r\n                    menuData.map( (menu, index) => {\r\n                        let key = `sub${index+1}`;\r\n                         return (\r\n                            <Menu.SubMenu key={key} title={toKR(menu)} style={{borderBottom: '0.1rem solid #cccccc'}}>\r\n                                <Menu.Item key={index+1} style={styles}>\r\n                                {elements[menu].map(element => {\r\n                                        return (\r\n                                            <Tag.CheckableTag \r\n                                                    key={element} \r\n                                                    checked={selectedTags.indexOf(element) > -1}\r\n                                                    onChange={checked => onTagChange(menu, element, checked)}\r\n                                                    style={{ marginLeft: '0.5rem'}}>\r\n                                                \r\n                                                <Typography.Text style={{fontSize: '14px'}}>{element}</Typography.Text>\r\n                                            </Tag.CheckableTag> \r\n                                        )\r\n                                    }) \r\n                                }\r\n                                </Menu.Item>\r\n                            </Menu.SubMenu>  \r\n                        )  \r\n                    })\r\n                } \r\n            </Menu>\r\n\r\n    )\r\n}\r\n\r\nexport default React.memo(SideBar)","import React from 'react'\r\nimport axios from 'axios';\r\nimport {Row, Col, Layout } from 'antd';\r\n\r\n\r\nimport GridCard from '../../commons/GridCard';\r\nimport BodyTop from '../../commons/BodyTop';\r\nimport Filter from './Section/SideBar';\r\n\r\n\r\nfunction CaseManyPage() {\r\n    const [CaseData, setCaseData] = React.useState([]);\r\n   \r\n    const fetchData = React.useCallback(async () => {\r\n      const ret = await axios.get('/api/cases');\r\n      const res = ret.data;\r\n      setCaseData(res.data);\r\n    }, []);\r\n\r\n\r\n    React.useEffect(() => {\r\n      fetchData();\r\n    }, [fetchData]);\r\n\r\n    return (\r\n      <>\r\n        <BodyTop/>\r\n\r\n        <Layout className='user-cases-container'>\r\n            \r\n            <Layout.Content>\r\n              <Row className='user-cases-content-row'>\r\n                \r\n                <Col span={5}>\r\n                  <Filter setCaseData={setCaseData} />\r\n                </Col>\r\n\r\n                <Col span={19} className='user-cases-row-right'>\r\n                  <h2>시공사례</h2><hr /><br />\r\n\r\n                  <Row gutter={[16, 16]}>\r\n                    {CaseData &&\r\n                      CaseData.map((cases, index) => (\r\n                        <React.Fragment key={index}>\r\n                          <GridCard casedata={cases} />\r\n                        </React.Fragment>\r\n                      ))}\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n            </Layout.Content>\r\n          </Layout>\r\n      </>\r\n    );\r\n}\r\n\r\nexport default React.memo(CaseManyPage)\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\nimport DOMPurify from 'dompurify';\r\n\r\nimport {message, Descriptions, Badge} from 'antd'\r\n\r\nfunction CaseOnePage(props) {\r\n  const [dataSource, setDataSource] = React.useState(null);\r\n  const fetchData = async () => {\r\n    const ret = await (await axios.get(`/api/cases/${props.match.params.caseId}`)).data;\r\n\r\n    if(!ret.success) {\r\n      message.error(ret.msg);\r\n      window.history.back();\r\n    } else {\r\n      setDataSource(ret.data);\r\n    }\r\n  }\r\n  const createMarkup = (html) => {\r\n    return  {\r\n      __html: DOMPurify.sanitize(html)\r\n    }\r\n  }\r\n  React.useEffect(() => {\r\n    fetchData();\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n    {dataSource !== null && (\r\n      <div>\r\n        <div className='user-case-top-image'>\r\n            <span>Image</span>\r\n        </div>\r\n\r\n        <div style={{ width: \"76%\", margin: \"3rem auto\"}}>\r\n          <h2>{dataSource.title}</h2>\r\n          <hr />\r\n          <Descriptions size=\"small\" layout=\"horizontal\" bordered className=\"ant-descriptions-container\">\r\n              {/* division */}\r\n              <Descriptions.Item label=\"공간\">{dataSource.division}</Descriptions.Item>\r\n              {/* area */}\r\n              <Descriptions.Item label=\"평형대\">{dataSource.area}평대</Descriptions.Item>\r\n              {/* office */}\r\n              <Descriptions.Item label=\"지점\">{dataSource.office}</Descriptions.Item>\r\n\r\n              {/* color */}\r\n              <Descriptions.Item label=\"색상\">{dataSource.color.map(x => `${x} `)} </Descriptions.Item>\r\n              {/* section */}\r\n              <Descriptions.Item label=\"영역\">{dataSource.section.map(x => `${x} `)}</Descriptions.Item>\r\n              {/* style */}\r\n              <Descriptions.Item label=\"스타일\">{dataSource.style.map(x => `${x} `)}</Descriptions.Item>\r\n              \r\n              {/* best */}\r\n              <Descriptions.Item label=\"베스트\">\r\n                  <Badge status={dataSource.best ? \"success\": \"error\"} text={dataSource.best ? \"Yes\": \"No\"} />\r\n              </Descriptions.Item>\r\n\r\n              {/* date */}\r\n              <Descriptions.Item label=\"등록 날짜\" span={2}>{dataSource.date}</Descriptions.Item>\r\n          \r\n              {/* info */}\r\n              <Descriptions.Item label=\"세부내용\" span={3}><div style={{textAlign: 'left'}}>{dataSource.info}</div></Descriptions.Item>\r\n\r\n              {/* content */}\r\n              <Descriptions.Item label=\"내용\" span={3}>\r\n                  <div style={{textAlign: 'left'}} dangerouslySetInnerHTML={createMarkup(dataSource.content)}></div>\r\n              </Descriptions.Item>\r\n\r\n          </Descriptions>\r\n        </div>\r\n      </div>\r\n    )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CaseOnePage;\r\n","import React from 'react'\nimport axios from 'axios'\nimport {Row} from 'antd';\n\nimport BodyTop from '../../commons/BodyTop';\nimport GridCard from '../../commons/GridCard';\n\nfunction LandingPage() {\n    const [dataSource, setDataSource] = React.useState(null);\n\n    const fetchData = async () => {\n        const response = await (await axios.get('/api/cases?best=true')).data;\n        setDataSource(response.data);\n      }\n    \n      React.useState(() => {\n        fetchData();\n      },[]);\n\n    return (\n        <>\n            <div>\n                <BodyTop/>\n                    <br />    \n                <div className='user-landing-container'>\n                    <h2>베스트 인테리어</h2>\n                    <hr />\n                    <br />\n\n                    <Row gutter={[16, 16]}>\n                    {dataSource !== null && dataSource.map((v, index) => (\n                        <React.Fragment key={index}>\n                            <GridCard casedata={v} />\n                        </React.Fragment>\n                        ))}\n                    </Row>\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default LandingPage\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { Table, Typography } from 'antd';\r\n\r\nfunction NoticePage() {\r\n    const [dataSource, setDataSource] = React.useState([]);\r\n    const [loading, setLoading] = React.useState(true)\r\n    \r\n\r\n    const fetchData = async () => {\r\n      const result = await (await axios.get('/api/notices')).data.data\r\n      setDataSource(result === undefined ? [] : result);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchData();\r\n        setLoading(false);\r\n    }, [])\r\n\r\n    const columns = [\r\n        {\r\n          title: '번호',\r\n          dataIndex: 'no',\r\n          key: 'no',\r\n          width: 100,\r\n          align: 'center', \r\n        },\r\n        {\r\n          title: '제목',\r\n          dataIndex: 'title',\r\n          key: 'title',\r\n          align: 'center', \r\n          render: text => <div style={{textAlign: 'left', fontSize: '17px', padding: '0.5rem'}}><Typography.Text strong>{text}</Typography.Text></div>\r\n        },\r\n        {\r\n          title: '작성 날짜',\r\n          dataIndex: 'date',\r\n          key: 'date',\r\n          width: 200,\r\n          align: 'center',\r\n          render: text => <div style={{textAlign: 'left', fontSize: '16px', padding: '0.5rem'}}>{text}</div>\r\n        }\r\n    ];\r\n\r\n    return (\r\n          <div className='user-notice-container'>\r\n              <h2>공지사항</h2>\r\n\r\n              <div className='user-notice-content'>\r\n                  <Table columns={columns} dataSource={dataSource} \r\n                          pagination={false} loading={loading} \r\n                          expandable={{\r\n                          expandedRowRender: record => <p style={{ margin: '1rem' }}>{record.content}</p>,\r\n                          rowExpandable: record => record.no !== 'Not Expandable',\r\n                          expandRowByClick: true\r\n                        }}                        \r\n                  />\r\n                  \r\n              </div>\r\n          </div>\r\n    )\r\n   \r\n\r\n\r\n    \r\n    \r\n}\r\n\r\nexport default React.memo(NoticePage)\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { Form, Select, Button, Input, Tooltip, DatePicker, Row, Col, Modal, message } from 'antd';\r\nimport {QuestionCircleOutlined, ExclamationCircleOutlined} from '@ant-design/icons'\r\nimport DaumPostCode from 'react-daum-postcode';\r\n\r\nconst width = 700;\r\nconst height = 450;\r\nconst modalStyle = {\r\n    overflow: \"hidden\"\r\n}\r\n\r\nfunction OrderPage() {\r\n    const [address, setAddress] = React.useState('');\r\n    const [visible, setVisible] = React.useState(false)\r\n    const formItemLayout = {\r\n      labelCol: {\r\n        span: 9,\r\n      },\r\n      wrapperCol: {\r\n        span: 10,\r\n      },\r\n    };    \r\n\r\n    const handleAddress = (data) => {\r\n        let AllAddress = data.address;\r\n        let extraAddress = ''; \r\n        \r\n        if (data.addressType === 'R') {\r\n          if (data.bname !== '') {\r\n            extraAddress += data.bname;\r\n          }\r\n          if (data.buildingName !== '') {\r\n            extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n          }\r\n          AllAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n        }\r\n        setAddress(AllAddress)\r\n        setVisible(false);\r\n    }\r\n\r\n    const handleOpenPost = () => {\r\n        setVisible(true)\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n        values['address'] = address;\r\n        axios.post('/api/orders', values).then((response) => {\r\n            if(response.data.success) {\r\n                message.success(response.data.msg)\r\n                // need redirecting \r\n            } else {\r\n                console.log(false)\r\n            }\r\n        })\r\n    };\r\n    \r\n    return (\r\n        <div className='user-order-container'>\r\n            <h2>견적문의</h2>\r\n\r\n            <div className='user-order-content'>\r\n                <Form name=\"validate_other\" {...formItemLayout} onFinish={onFinish} requiredMark={false} size='large'>\r\n                    <Form.Item name=\"name\" hasFeedback wrapperCol={{span: 7}} label={ <span>고객명</span>} \r\n                    rules={[{required: true, message: '이름을 입력해주세요', whitespace: true}]}>\r\n                        <Input style={{ width: '100%' }}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"contact\" hasFeedback label='연락처' wrapperCol={{span: 7}}\r\n                                rules={[{required: true, message: '연락처를 입력해주세요', whitespace: true}]}>\r\n                        <Input style={{ width: '100%' }} placeholder='- 를 제외하고 입력해주세요' />\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"email\" hasFeedback label='이메일' wrapperCol={{span: 7}}\r\n                        rules={[{ type: 'email', message: '이메일 형식으로 입력해주세요'}, {required: true, message: '이메일을 입력해주세요', whitespace: true}]}>\r\n                        <Input style={{ width: '100%' }}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"address\" label='주거지역' wrapperCol={{span: 10}}>\r\n                        <Row gutter={8}>\r\n                            <Col span={23}>\r\n                                <Input value={address} style={{ width: '100%' }} onClick={handleOpenPost} />\r\n                            </Col>\r\n                            <Col span={1}>\r\n                                <Button onClick={handleOpenPost}><span>우편번호 찾기</span></Button>\r\n                                \r\n                            </Col>\r\n                        </Row>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"expected_date\" hasFeedback label='공사 예상 날짜'  wrapperCol={{span: 5}}\r\n                        rules={[{required: true, message: '예정날짜를 입력해주세요'}]}>\r\n                        <DatePicker style={{width: '100%'}}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"expected_price\" hasFeedback label='공사 예상 비용' wrapperCol={{span: 7}}\r\n                                rules={[{required: true, message: '공사 예상 금액을 선택헤주세요'}]}>\r\n                        <Input style={{width: '100%'}} placeholder='공사 예상 금액을 입력해주세요' /> \r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"area\" hasFeedback label=\"평형대\" wrapperCol={{span: 7}} rules={[{required: true, message: '평형대를 선택헤주세요'}]}>\r\n                        <Select placeholder=\"평형대를 선택해주세요.\">\r\n                            <Select.Option value=\"20평대\">20평대</Select.Option>\r\n                            <Select.Option value=\"30평대\">30평대</Select.Option>\r\n                            <Select.Option value=\"40평대\">40평대</Select.Option>\r\n                            <Select.Option value=\"50평대\">50평대</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"papering\" hasFeedback label=\"도배\"\r\n                                rules={[{required: true, message: '도배를 선택해주세요', type: 'array'}]}>\r\n                        <Select mode=\"multiple\" placeholder=\"도배를 선택해주세요.\">\r\n                            <Select.Option value=\"선택안함\">선택안함</Select.Option>\r\n                            <Select.Option value=\"전체 실크벽지\">전체 실크벽지</Select.Option>\r\n                            <Select.Option value=\"전체 광폭합지\">전체 광폭합지</Select.Option>\r\n                            <Select.Option value=\"거실, 주방실크 + 방 광폭합지\">거실, 주방실크 + 방 광폭합지</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    \r\n                    <Form.Item name=\"flooring\" hasFeedback label=\"바닥재\" \r\n                                 rules={[{required: true, message: '바닥재를 선택해주세요', type: 'array'}]}>\r\n                        <Select mode=\"multiple\" placeholder=\"바닥재를 선택해주세요\">\r\n                            <Select.Option value=\"선택안함\">선택안함</Select.Option>\r\n                            <Select.Option value=\"전체 강마루\">전체 강마루</Select.Option>\r\n                            <Select.Option value=\"전체 강화마루\">전체 강화마루</Select.Option>\r\n                            <Select.Option value=\"전체 온돌마루\">전체 온돌마루</Select.Option>\r\n                            <Select.Option value=\"전체 장판\">전체 장판</Select.Option>\r\n                            <Select.Option value=\"거실, 주방타일 + 방 마루\">거실, 주방타일 + 방 마루</Select.Option>\r\n                            <Select.Option value=\"거실, 주방마루 + 방 장판\">거실, 주방마루 + 방 장판</Select.Option>\r\n                            <Select.Option value=\"기존 마루 철거 및 샌딩\">기존 마루 철거 및 샌딩</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"finishing_material\" hasFeedback  label={ <span>마감재 공사&nbsp;&nbsp;\r\n                            <Tooltip title=\"※ 시공범위 : 방문, 문틀, 몰딩, 대문 내부, 내부창문외 목재시공면 마감\">\r\n                                <ExclamationCircleOutlined />\r\n                            </Tooltip></span>} \r\n                            rules={[{required: true, message: '마감재를 선택해주세요', type: 'array'}]}>\r\n                        <Select mode=\"multiple\" placeholder=\"마감재를 선택해주세요\">\r\n                            <Select.Option value=\"선택안함\">선택안함</Select.Option>\r\n                            <Select.Option value=\"친환경 페인트\">친환경 페인트</Select.Option>\r\n                            <Select.Option value=\"락카 페인트\">락카 페인트</Select.Option>\r\n                            <Select.Option value=\"필름\">필름</Select.Option>\r\n                            <Select.Option value=\">발코니 탄성코트\">발코니 탄성코트</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"light\" hasFeedback label=\"전기 조명\" \r\n                                rules={[{ required: true, message: '조명을 선택해주세요', type: 'array'}]}>\r\n                        <Select mode=\"multiple\" placeholder=\"조명을 선택해주세요\">\r\n                            <Select.Option value=\"선택안함\">선택안함</Select.Option>\r\n                            <Select.Option value=\"배선공사\">배선공사</Select.Option>\r\n                            <Select.Option value=\"조명, 콘센트 이동 및 신설\">조명, 콘센트 이동 및 신설</Select.Option>\r\n                            <Select.Option value=\"벽걸이TV 배선매립\">벽걸이TV 배선 매립</Select.Option>\r\n                            <Select.Option value=\"조명기구교체\">조명 기구 교체</Select.Option>\r\n                            <Select.Option value=\"콘센트, 스위치커버교체\">콘센트, 스위치 커버 교체</Select.Option>\r\n                            <Select.Option value=\"비디오폰\">비디오폰</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"furniture\" hasFeedback label=\"제작 가구\" \r\n                                rules={[{required: true, message: '가구를 선택해주세요', type: 'array'}]}>\r\n                        <Select mode=\"multiple\" placeholder=\"가구를 선택해주세요\">\r\n                            <Select.Option value=\"선택안함\">선택안함</Select.Option>\r\n                            <Select.Option value=\"부엌 가구\">부엌 가구</Select.Option>\r\n                            <Select.Option value=\"아일랜드식탁\">아일랜드식탁</Select.Option>\r\n                            <Select.Option value=\"신발장\">신발장</Select.Option>\r\n                            <Select.Option value=\"붙박이장\">붙박이장</Select.Option>\r\n                            <Select.Option value=\"창고수납장\">창고수납장</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"tile\" hasFeedback label=\"타일 공사\" \r\n                                rules={[{required: true, message: '타일을 선택해주세요', type: 'array'}]}>\r\n                        <Select mode=\"multiple\" placeholder=\"타일을 선택해주세요\">\r\n                            <Select.Option value=\"선택안함\">선택안함</Select.Option>\r\n                            <Select.Option value=\"주방 타일\">주방 타일</Select.Option>\r\n                            <Select.Option value=\"현관 타일\">현관 타일</Select.Option>\r\n                            <Select.Option value=\"발코니 타일\">발코니 타일</Select.Option>\r\n                            <Select.Option value=\"다용도실 타일\">다용도실 타일</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"bathroom\" hasFeedback label=\"욕실 공사\" \r\n                                rules={[{required: true, message: '욕실공사를 선택해주세요', type: 'array'}]}>\r\n                        <Select mode=\"multiple\" placeholder=\"욕실공사를 선택해주세요\">\r\n                            <Select.Option value=\"선택안함\">선택안함</Select.Option>\r\n                            <Select.Option value=\"샤워부스\">샤워부스</Select.Option>\r\n                            <Select.Option value=\"파티션\">파티션</Select.Option>\r\n                            <Select.Option value=\"욕조\">욕조</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"expansion\" hasFeedback label=\"확장 공사\" \r\n                                rules={[{required: true, message: '확장공사를 선택해주세요', type: 'array'}]}>\r\n                        <Select mode=\"multiple\" placeholder=\"확장공사를 선택해주세요\">\r\n                            <Select.Option value=\"선택안함\">선택안함</Select.Option>\r\n                            <Select.Option value=\"거실\">거실</Select.Option>\r\n                            <Select.Option value=\"주방\">주방</Select.Option>\r\n                            <Select.Option value=\"방\">방</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"chassis\" hasFeedback label=\"샤시 공사\" \r\n                                rules={[{required: true, message: '샤시공사를 선택해주세요', type: 'array'}]}>\r\n                        <Select mode=\"multiple\" placeholder=\"샤시공사를 선택해주세요\">\r\n                            <Select.Option value=\"선택안함\">선택안함</Select.Option>\r\n                            <Select.Option value=\"전체\">전체</Select.Option>\r\n                            <Select.Option value=\"내부\">내부</Select.Option>\r\n                            <Select.Option value=\"외부\">외부</Select.Option>\r\n                            <Select.Option value=\"부분\">부분</Select.Option>\r\n                            <Select.Option value=\"샤시리폼(필름)\">샤시리폼 (필름)</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"woodwork\" hasFeedback label=\"목공사\" \r\n                                rules={[{required: true, message: '목공사를 선택해주세요', type: 'array'}]}>\r\n                        <Select mode=\"multiple\" placeholder=\"목공사를 선택해주세요\">\r\n                            <Select.Option value=\"선택안함\">선택안함</Select.Option>\r\n                            <Select.Option value=\"몰딩\">몰딩</Select.Option>\r\n                            <Select.Option value=\"중문\">중문</Select.Option>\r\n                            <Select.Option value=\"문틀리폼\">문틀리폼</Select.Option>\r\n                            <Select.Option value=\"문틀교체\">문틀교체</Select.Option>\r\n                            <Select.Option value=\"슬라이드 도어\">슬라이드 도어</Select.Option>\r\n                            <Select.Option value=\"평면타입 등박스\">평면타입 등박스</Select.Option>\r\n                            <Select.Option value=\"우물형 등박스\">우물형 등박스</Select.Option>\r\n                            <Select.Option value=\"간접 등박스\">간접 등박스</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"artwall\" hasFeedback label=\"아트월\"\r\n                                rules={[{required: true, message: '아트월을 선택해주세요', type: 'array'}]}>\r\n                        <Select mode=\"multiple\" placeholder=\"아트월을 선택해주세요\">\r\n                            <Select.Option value=\"선택안함\">선택안함</Select.Option>\r\n                            <Select.Option value=\"타일 아트월\">타일 아트월</Select.Option>\r\n                            <Select.Option value=\"대리석 아트월\">대리석 아트월</Select.Option>\r\n                            <Select.Option value=\"웨인스콧팅 아트월\">웨인스콧팅 아트월</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"etc\" hasFeedback label=\"기타 공사\" \r\n                                rules={[{required: true, message: '기타공사를 선택해주세요', type: 'array'}]}>\r\n                        <Select mode=\"multiple\" placeholder=\"기타공사를 선택해주세요\">\r\n                            <Select.Option value=\"선택안함\">선택안함</Select.Option>\r\n                            <Select.Option value=\"현관 자동키\">현관 자동키</Select.Option>\r\n                            <Select.Option value=\"방문 손잡이\">방문 손잡이</Select.Option>\r\n                            <Select.Option value=\"입주 청소\">입주 청소</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item name=\"styling\" hasFeedback label={ <span>홈 스타일링&nbsp;\r\n                            <Tooltip title=\"인테리어와 어울리게 가구, 침구, 커튼, 소품등을 데코해 줌으로서 보다 완성도 있는 인테리어공간 연출을 의미합니다.\">\r\n                                <QuestionCircleOutlined />\r\n                            </Tooltip></span>} \r\n                            rules={[{required: true, message: '홈 스타일링을 선택해주세요', type: 'array'}]}>\r\n                        <Select mode=\"multiple\" placeholder=\"홈 스타일링을 선택해주세요\">\r\n                            <Select.Option value=\"선택안함\">선택안함</Select.Option>\r\n                            <Select.Option value=\"전체\">전체</Select.Option>\r\n                            <Select.Option value=\"부분\">부분</Select.Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n              \r\n                    <Form.Item name='qna' label=\"문의 사항\">\r\n                        <Input.TextArea style={{ width: '100%' }}/>\r\n                    </Form.Item>\r\n\r\n                    <Form.Item wrapperCol={{ span: 15, offset: 12 }}>\r\n                        <Button htmlType=\"submit\">문의하기</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n                {\r\n                    visible ? (\r\n                        <Modal title=\"우편주소 찾기\" \r\n                                centered \r\n                                visible={visible}\r\n                                width={750}\r\n                                onCancel={()=>setVisible(false)}\r\n                                footer={null}>\r\n                                \r\n                            <DaumPostCode onComplete={handleAddress} width={width} height={height} style={modalStyle}/>\r\n                        </Modal>\r\n                    ) : null\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(OrderPage)\r\n\r\n","export const LOGIN_USER = 'login_user';\nexport const REGISTER_USER = 'register_user';\nexport const AUTH_USER = 'auth_user';\nexport const LOGOUT_USER = 'logout_user';\n\nexport const FILTER_CASES = 'filter_cases';\nexport const FETCH_CASES = 'fetch_cases';\n\nexport const FETCH_ELEMENTS = 'fetch_elements';\n","//SERVER ROUTES\nexport const USER_SERVER = '/api/users';\n","import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, Button, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\nimport {UserOutlined , LockOutlined} from '@ant-design/icons';\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n\n  return (\n    <>\n        <Formik initialValues={{ adminId: '', password: ''}}\n                validationSchema={Yup.object().shape({ adminId: Yup.string().required('id is required'),\n                    password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required')})}\n                onSubmit={(values, { setSubmitting }) => {\n                        setTimeout(() => {\n                          let dataToSubmit = {\n                            adminId: values.adminId,\n                            password: values.password\n                          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          /* dirty, */\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit\n          /* handleReset, */\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"adminId\"\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your id\"\n                  type=\"text\"\n                  value={values.adminId}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.adminId && touched.adminId ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.adminId && touched.adminId && (\n                  <div className=\"input-feedback\" style={{ marginTop: '0rem' }}>{errors.adminId}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\" style={{ marginTop: '0rem' }}>{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px', marginTop: '10px;'}}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                  </Button>\n                </div>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n    </>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n","import axios from 'axios';\nimport {\n    LOGIN_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from './types';\nimport { USER_SERVER } from '../components/Config.js';\n\nexport function loginUser(dataToSubmit){\n    const request = axios.post(`${USER_SERVER}/login`,dataToSubmit)\n                .then(response => response.data);\n    return {\n        type: LOGIN_USER,\n        payload: request\n    }\n}\n\nexport function auth(){\n    const request = axios.get(`${USER_SERVER}/auth`)\n    .then(response => response.data);\n\n    return {\n        type: AUTH_USER,\n        payload: request\n    }\n}\n\nexport function logoutUser(){\n    const request = axios.get(`${USER_SERVER}/logout`)\n    .then(response => response.data);\n\n    return {\n        type: LOGOUT_USER,\n        payload: request\n    }\n}\n\n","import React from 'react'\r\n\r\nfunction ErrorPage() {\r\n    return (\r\n       <>\r\n            <h1>Error Page</h1>\r\n       </>\r\n    )\r\n}\r\n\r\nexport default React.memo(ErrorPage)\r\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function fn(SpecificComponent, option) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            \n            dispatch(auth()).then(response => {\n                \n                if(!response.payload.isAuth){\n                    if(option) { \n                        props.history.push('/login');\n                    }\n\n                } /* else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                } */\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","import React from 'react'\r\n\r\nimport { \r\nBrowserRouter as Router, \r\nRoute, \r\nSwitch\r\n} from \"react-router-dom\";\r\n    \r\nimport { Layout } from 'antd';\r\n\r\nimport NavBar from \"./views/NavBar/NavBar\";\r\nimport Footer from \"./views/Footer/Footer\"\r\n\r\nimport DaonPage from './views/page/DaonPage/DaonPage';\r\nimport CaseManyPage from \"./views/page/CasePage/CaseManyPage\"\r\nimport CaseOnePage from './views/page/CasePage/CaseOnePage'\r\nimport LandingPage from \"./views/page/LandingPage/LandingPage\";\r\nimport NoticePage from \"./views/page/Noticepage/NoticePage\";\r\nimport OrderPage from \"./views/page/OrderPage/OrderPage\";\r\nimport LoginPage from \"./views/page/LoginPage/LoginPage.js\";\r\n\r\nimport ErrorPage from './views/commons/ErrorPage';\r\n\r\nimport Auth from \"../hoc/auth\";\r\n\r\nimport './css/user.css'\r\n\r\nconst NewLandingPaga = Auth(LandingPage, null);\r\nconst NewDaonPage =  Auth(DaonPage, null);\r\nconst NewCaseManyPage = Auth(CaseManyPage, null);\r\nconst NewCaseOnePage = Auth(CaseOnePage, null)\r\nconst NewNoticePage = Auth(NoticePage, null);\r\nconst NewOrderPage = Auth(OrderPage, null);\r\nconst NewLoginPage = Auth(LoginPage, null);\r\n\r\nfunction User() {\r\n    return (\r\n        <>\r\n          <div className=\"user-container\">\r\n            <div className=\"user-layout\">\r\n              <Layout id=\"user-layout\">\r\n                <Router>\r\n                    <NavBar />\r\n\r\n                    <Layout.Content className=\"user-layout-content-container\">\r\n                      <Switch>\r\n                          <Route exact path=\"/\" component={NewLandingPaga} />\r\n                          <Route  path=\"/daon\" component={NewDaonPage} />\r\n                          <Route exact path=\"/cases\" component={NewCaseManyPage} />\r\n                          <Route  path=\"/cases/:caseId\" component={NewCaseOnePage} />\r\n                          <Route  path=\"/notice\" component={NewNoticePage} />\r\n                          <Route  path=\"/order\" component={NewOrderPage} />\r\n                          <Route  path=\"/login\" component={NewLoginPage} />\r\n                          <Route component={ErrorPage} />  \r\n                      </Switch>\r\n                    </Layout.Content>\r\n                    \r\n                    <Layout.Footer className=\"user-layout-footer-container\">\r\n                      <Footer />\r\n                    </Layout.Footer>\r\n                    \r\n                  </Router>\r\n              </Layout>    \r\n            </div>\r\n          </div>  \r\n        </>\r\n    );\r\n}\r\n\r\nexport default React.memo(User)\r\n","import React from 'react'\r\nimport {  Layout, Typography } from 'antd';\r\n\r\nimport '../css/Admin.css'\r\n\r\nfunction AdminPageNav() {\r\n    return (\r\n        <Layout.Header id=\"admin-nav-header\">\r\n              <div id=\"admin-nav-content\">\r\n                  <a href=\"/admin\"><Typography.Title level={3}>DAON</Typography.Title></a>\r\n              </div>\r\n        </Layout.Header>\r\n    )\r\n}\r\n\r\nexport default React.memo(AdminPageNav)\r\n","import React from 'react'\r\nimport { Link, withRouter} from \"react-router-dom\";\r\n\r\nimport { Menu } from \"antd\";\r\nimport { PieChartOutlined } from \"@ant-design/icons\";\r\n\r\nimport '../css/Admin.css'\r\n\r\nfunction AdminSider(props) {\r\n    return (      \r\n        <Menu mode=\"vertical\" id=\"admin-sider\">\r\n          {props.data && props.data.map((x, index) => {\r\n              return (\r\n                  <Menu.Item key={index}>\r\n                    <PieChartOutlined />\r\n                      <Link to={`/admin/${Object.keys(x)[0]}`}>{Object.values(x)[0]}</Link>\r\n                  </Menu.Item>\r\n              );\r\n            })}\r\n        </Menu>\r\n    );\r\n}\r\n\r\nexport default React.memo(withRouter(AdminSider))","import React from \"react\";\r\nimport {Typography, List} from 'antd'\r\n\r\nconst data = [\r\n  '견적문의',\r\n  '공지사항'\r\n];\r\n\r\nfunction AdminPage() {\r\n    \r\n    return (\r\n      <>\r\n          <List header={<Typography.Title level={3}>TODO :: </Typography.Title>} \r\n                bordered dataSource={data} size=\"large\"\r\n                renderItem={item => <List.Item>{item}</List.Item>} style={{backgroundColor: '#fff'}}\r\n          />\r\n      </>\r\n    );\r\n}\r\n\r\nexport default AdminPage;\r\n","import React from 'react'\r\nimport { Spin } from 'antd';\r\n\r\nfunction Load() {\r\n    return (\r\n        <div style={{minHeight: '50vh', display: 'flex', justifyContent: 'center', alignItems: 'center'}}>                    \r\n            <Spin size=\"large\" tip=\"데이터 가져오는중...\"/>                \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Load)\r\n","import { notification} from 'antd';\r\n\r\nexport default function openNotificationWithIcon(response) {\r\n    const type = response.success ? 'success' : 'error';\r\n    return notification[type]({ message: '알림', description: response.msg });\r\n}","import React from 'react';\r\nimport axios from 'axios';\r\nimport { Table, Button, Tooltip, Form, Popconfirm, Input, Space } from 'antd';\r\nimport {PlusOutlined} from '@ant-design/icons'\r\n\r\nimport Notifications from '../../../commons/Notifications'\r\nimport '../css/Admin.css';\r\n\r\n\r\n\r\nfunction List(props) {\r\n    const [form] = Form.useForm();\r\n    const [count, setCount] = React.useState(props.data.length + 1);\r\n    const [editingKey, setEditingKey] = React.useState('');\r\n    const [dataSource, setDataSource] = React.useState([]);  \r\n\r\n    const EditableContext = React.createContext(null); \r\n    const isEditing = (record) => record.key === editingKey;\r\n    \r\n    const query = (data) => {\r\n      switch (data.status) {\r\n        case 'save':\r\n          axios.patch('/api/elements', data)\r\n                .then(response => Notifications(response.data));\r\n          break;\r\n        case 'delete':\r\n          axios.delete(`/api/elements?${data.field}=${data.value}`)\r\n                .then(response => Notifications(response.data));\r\n          break;\r\n        default:\r\n            Notifications(null);\r\n          break;\r\n      }\r\n    }\r\n\r\n    const setUpData = React.useCallback(() => {\r\n      let newData = props.data.map((v,index)=> ({\r\n            key : `${props.field}${index + 1}`,\r\n            category : props.name, \r\n            data : v\r\n          })\r\n      )\r\n      setDataSource(newData);\r\n    },[props.name])\r\n\r\n    React.useLayoutEffect(() =>{\r\n          setUpData();\r\n    },[setUpData]); \r\n\r\n    const EditableRow = ({ index, ...datas }) => {\r\n      return (\r\n        <Form form={form} component={false}>\r\n          <EditableContext.Provider value={form}>\r\n            <tr {...datas} />\r\n          </EditableContext.Provider>\r\n        </Form>\r\n      );\r\n    };\r\n    const EditableCell = ({ title, editing, children, dataIndex, record, ...restProps }) => {\r\n      const inputRef = React.useRef(null);\r\n      \r\n\r\n      const childNode = ( editing === true ? (\r\n          <Form.Item style={{ margin: 0 }} name={dataIndex} rules={[{required: true, message: '값을 입력해주세요.'}]}>\r\n              <Input ref={inputRef} />\r\n          </Form.Item>\r\n      ) : (children) );\r\n      \r\n       return <td {...restProps}>{childNode}</td>;\r\n    \r\n    \r\n    };\r\n\r\n    const handelAdd = () => {\r\n      const cnt = count;\r\n      const data = dataSource;\r\n      const newData = {\r\n        key: `${props.field}${cnt}`,\r\n        category: props.name,\r\n        data: ''\r\n      };\r\n      form.setFieldsValue({ data: newData.data, ...newData}); \r\n      setEditingKey(newData.key);\r\n      setCount(cnt + 1);\r\n      setDataSource([...data, newData])\r\n    \r\n    };\r\n\r\n    const handleEdit = (record) => {\r\n      form.setFieldsValue({ data: record.data, ...record});\r\n      setEditingKey(record.key);\r\n    };\r\n\r\n    const handleSave = async (key) => {\r\n        try {\r\n          const row = await form.validateFields();\r\n          const newData = [...dataSource];\r\n          const index = newData.findIndex((item) => key === item.key);\r\n          \r\n          if (index > -1) {\r\n            const item = newData[index];\r\n            newData.splice(index, 1, { ...item, ...row });\r\n            setDataSource(newData);\r\n            setEditingKey('');\r\n            query({ status : 'save', field: props.field, value : newData.map( x => x.data)});\r\n          } else {\r\n            newData.push(row);\r\n            setDataSource(newData);\r\n            setEditingKey('');\r\n          }\r\n        } catch (errInfo) {\r\n          console.log('Validate Failed:', errInfo);\r\n        }\r\n    };\r\n\r\n    const handleDelete = (record) => {\r\n        const data = [...dataSource];\r\n        setDataSource(data.filter((item) => item.key !== record.key));\r\n        query({status: 'delete', field: props.field, value : record.data });\r\n    }\r\n    \r\n    const handleCancel = () => {\r\n        setEditingKey('');\r\n    };\r\n    \r\n    const columns = [\r\n        {\r\n          title: '분류',\r\n          dataIndex: 'category',\r\n          width: '15%',\r\n          align: 'center',\r\n          editable: false,\r\n        },\r\n        {\r\n          title: '데이터',\r\n          dataIndex: 'data',\r\n          width: '40%',\r\n          align: 'center',\r\n          editable: true,\r\n        },\r\n        {\r\n            title: '',\r\n            dataIndex: 'operation',\r\n            width: '30%',\r\n            align: 'center',\r\n            render: (_, record) => {\r\n                const editable = isEditing(record);\r\n                return dataSource.length >= 1 ? \r\n                (\r\n                    editable === true ? \r\n                    (\r\n                        <Space size=\"middle\">\r\n                            <Button onClick={()=>handleSave(record.key)}>저장</Button>\r\n                            <Button onClick={handleCancel}>취소</Button>\r\n                        </Space>\r\n                    ) \r\n                    : \r\n                    (\r\n                        <Space size=\"middle\">\r\n                            <Button onClick={()=>handleEdit(record)}> 수정</Button>\r\n                            <Popconfirm title=\"삭제할까요?\" onConfirm={() => handleDelete(record)}>\r\n                                 <Button>삭제</Button>\r\n                            </Popconfirm>\r\n                        </Space>\r\n                    )\r\n                    \r\n                )\r\n                : null\r\n            }\r\n        }\r\n    ];\r\n\r\n    const mergedColumns = columns.map((col) => {\r\n        if (!col.editable) {\r\n          return col;\r\n        }\r\n    \r\n        return { ...col, onCell: (record) => ({\r\n                                    record,\r\n                                    dataIndex: col.dataIndex,\r\n                                    title: col.title,\r\n                                    editing: isEditing(record)\r\n                          })\r\n        };\r\n    });\r\n\r\n    const components = {  \r\n      body: { row: EditableRow, cell: EditableCell }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Table bordered columns={mergedColumns} components={components} dataSource={dataSource}\r\n                pagination={false} rowClassName={() => 'editable-row'} \r\n            />\r\n             <div id=\"admin-element-tab-add\">\r\n                <Tooltip title=\"새 데이터 추가\">\r\n                    <Button onClick={handelAdd} shape=\"circle\" icon={<PlusOutlined />} />\r\n                </Tooltip>\r\n            </div>\r\n        </div>\r\n     \r\n    )\r\n}\r\n\r\nexport default React.memo(List)\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport {Typography, Tabs} from 'antd'\r\nimport {SlidersOutlined} from '@ant-design/icons'\r\n\r\nimport Load from './ElementComponents/Load'\r\nimport List from './ElementComponents/List';\r\n\r\nimport './css/Admin.css'\r\n\r\nconst toKR = (name) => {\r\n    switch (name) {\r\n        case 'division':\r\n            return '공간'\r\n        case 'color':\r\n            return '색상'\r\n        case 'area':\r\n            return '평수'\r\n        case 'style':\r\n            return '스타일'\r\n        case 'section':\r\n            return '영역'\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nfunction AdminElementPage() {\r\n    const [dataSource, setDataSource] = React.useState(null);\r\n    const [view, setView] = React.useState('load');\r\n\r\n    const fetchElements = async () => {\r\n        const response = await (await axios.get('/api/elements')).data.data[0];\r\n        const filteredData = Object.entries(response).filter((value)=> typeof value[1] === 'object')\r\n        \r\n        setDataSource(filteredData)\r\n    }\r\n    \r\n    React.useEffect(() => {\r\n        setTimeout(() => {\r\n            fetchElements();\r\n            setView('list');\r\n        },300);\r\n        \r\n    },[]);\r\n\r\n    switch (view) {\r\n        case 'load':\r\n            return <Load />\r\n        case 'list':\r\n            return (\r\n                <>\r\n                    <Typography.Title level={2}><SlidersOutlined /> 필터 관리</Typography.Title>\r\n                    <div id=\"admin-element-container\">\r\n                        <Tabs id=\"admin-element-tab-container\" type=\"card\" size=\"large\">\r\n                            {dataSource && dataSource.map( (v,index)=> {\r\n                                    const tabName = toKR(v[0]);\r\n                                    return (<Tabs.TabPane tab={tabName} key={index+1}>\r\n                                                    <List name={tabName} field={v[0]} data={v[1]} />\r\n                                            </Tabs.TabPane>)\r\n                                })\r\n                            }\r\n                        </Tabs>\r\n                    </div>\r\n                    \r\n                </>\r\n            ) \r\n        default:\r\n            // TODO: Mapping to error page\r\n            break;\r\n    }\r\n\r\n   /*  */\r\n}\r\n\r\nexport default React.memo(AdminElementPage);\r\n","import React from 'react'\r\nimport { Spin } from 'antd';\r\n\r\nfunction Load() {\r\n    return (\r\n        <div id=\"admin-load\">\r\n            <Spin size=\"large\" tip=\"데이터 가져오는중...\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Load)\r\n","import React from 'react'\r\nimport { Result } from 'antd';\r\n\r\nimport {SmileOutlined} from '@ant-design/icons'\r\n\r\nfunction Null() {\r\n    return (\r\n        <div id=\"admin-null\">\r\n            <Result icon={<SmileOutlined />} title=\"데이터를 추가해주세요\" />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default React.memo(Null)","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { Tooltip, Button, Row, Col, Card, Typography, Modal, BackTop} from 'antd'\r\nimport { PlusOutlined, EditOutlined, DeleteOutlined, ExclamationCircleOutlined  } from '@ant-design/icons'\r\n\r\nimport Null from './Null'\r\nimport Notifications from '../../../commons/Notifications'\r\n\r\nfunction List(props) {\r\n    const handleEdit = (row) => {\r\n        props.setRow(row);\r\n        props.setView('edit')\r\n        \r\n    }   \r\n\r\n    const handleRemove= (row) => {\r\n        Modal.confirm({\r\n            title: '삭제하시겠습니까?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: '한번 삭제하면 복구가 어렵습니다.',\r\n            okText: '삭제',\r\n            okType: 'danger',\r\n            cancelText: '취소',\r\n            onOk() {\r\n                const newData = props.dataSource.filter( x => x._id !== row._id);\r\n                axios.delete(`/api/cases/${row._id}`).then(response => {\r\n                    if(response.data.success) {\r\n                        props.setDataSource(newData);\r\n                        window.scrollTo(0, 0)\r\n                    }\r\n                    Notifications(response.data)\r\n                })                \r\n            },\r\n            onCancel() {\r\n                return false;\r\n            }\r\n          });\r\n    }\r\n\r\n    const handleItem = (row) => {\r\n        props.setRow(row)\r\n        props.setView('item')\r\n        window.scrollTo(0, 0)\r\n    }\r\n    \r\n    return (\r\n        <React.Fragment>\r\n                <BackTop visibilityHeight={300} />\r\n                <div id=\"admin-cases-list-add\">\r\n                    <Tooltip title=\"새 데이터 추가\">\r\n                        <Button onClick={()=> props.setView('add')} shape=\"round\" icon={<PlusOutlined />} />\r\n                    </Tooltip>\r\n                </div>\r\n\r\n                {props.dataSource.length === 0 ? (<Null />) : \r\n                    (\r\n                    <Row id=\"admin-cases-list-content\">\r\n                        <Col span={24}>\r\n                            <Row gutter={[24, 32]}>\r\n                            {props.dataSource && props.dataSource.map((row, index) => {\r\n                                return (\r\n                                    <React.Fragment key={index}>\r\n                                        <Col lg={6} md={8} xs={24}>\r\n                                            <Card hoverable={props.hover} cover={<img alt=\"example\" src=\"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"/>}\r\n                                                actions={[<EditOutlined key=\"edit\" onClick= {()=>handleEdit(row)} />,\r\n                                                            <DeleteOutlined key=\"remove\" onClick= {()=>handleRemove(row)} />]}\r\n                                            >\r\n                                                <a href='#!' onClick={()=> handleItem(row)}>\r\n                                                    <Card.Meta title={<Typography.Text strong>{row.title}</Typography.Text> } \r\n                                                            description={row.info} \r\n                                                            onPointerEnter ={()=>props.setHover(!props.hover)} \r\n                                                            onPointerLeave ={()=>props.setHover(!props.hover)} \r\n                                            \r\n                                                    />\r\n                                                </a>\r\n                                            </Card>\r\n                                        </Col>\r\n                                </React.Fragment>\r\n                                )   \r\n                            })}\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                    ) \r\n                }     \r\n               \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default React.memo(List)\r\n","import React from 'react'\r\nimport axios from 'axios';\r\nimport DOMPurify from 'dompurify';\r\nimport Slider from \"react-slick\";\r\n\r\nimport {Button, Descriptions, Badge, Space, Image, Modal, BackTop, Tooltip} from 'antd';\r\nimport {ExclamationCircleOutlined, AppstoreOutlined, EditOutlined, DeleteOutlined} from '@ant-design/icons'\r\n\r\nimport Notifications from '../../../commons/Notifications'\r\n\r\n\r\nimport '../css/slick.css';\r\nimport '../css/slick-theme.css';\r\n\r\nfunction Item(props) {\r\n    const handleList = () => {\r\n        props.setView('list')\r\n        props.setRow({});\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n    const handleRemove = () => {\r\n        Modal.confirm({\r\n            title: '삭제하시겠습니까?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: '한번 삭제하면 복구가 어렵습니다.',\r\n            okText: '삭제',\r\n            okType: 'danger',\r\n            cancelText: '취소',\r\n            onOk() {\r\n                const newData = props.dataSource.filter( x => x._id !== props.row._id);\r\n                axios.delete(`/api/cases/${props.row._id}`).then(response => {\r\n                    if(response.data.success) {\r\n                        props.setDataSource(newData);\r\n                        props.setView('list')\r\n                        props.setRow({});\r\n                        window.scrollTo(0, 0)\r\n                    }\r\n                    Notifications(response.data)\r\n                })                \r\n            },\r\n            onCancel() {\r\n                return false;\r\n            }\r\n          });\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        props.setView('edit')\r\n    }   \r\n\r\n    const createMarkup = (html) => {\r\n        return  {\r\n          __html: DOMPurify.sanitize(html)\r\n        }\r\n    }\r\n\r\n    const settings = {\r\n        customPaging: function(i) {\r\n            return (\r\n              <a href=\"#!\">\r\n                <img src={props.row.image[i]} style={{width: '100%', height:'70px'}} alt=\"test\" />\r\n              </a>\r\n            );\r\n          },\r\n          dots: true,\r\n          dotsClass: \"slick-dots slick-thumb\",\r\n          infinite: true,\r\n          speed: 500,\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <div id=\"admin-cases-item-buttons\">\r\n                <Space>\r\n                    <Tooltip title=\"목록\">\r\n                        <Button onClick={()=>handleList()} shape=\"round\" icon={<AppstoreOutlined />} />\r\n                    </Tooltip>\r\n                    <Tooltip title=\"수정\">\r\n                        <Button onClick={()=>handleEdit()} shape=\"round\" icon={<EditOutlined />} />\r\n                    </Tooltip>\r\n                    <Tooltip title=\"삭제\">\r\n                        <Button onClick={()=>handleRemove()} shape=\"round\" icon={<DeleteOutlined />} />\r\n                    </Tooltip>\r\n                </Space>\r\n            </div>\r\n            \r\n            <div id=\"admin-cases-item-container\">\r\n                <BackTop visibilityHeight={150} />\r\n                <div id=\"admin-cases-item-content\">\r\n                    <div id=\"slide-view-container\">\r\n                        <div id=\"slide-view-content\">\r\n                            <Slider {...settings} className=\"slide-view-size\">\r\n                                {props.row.image && props.row.image.map((v,i) => {\r\n                                    return (\r\n                                        <div key={i}> \r\n                                            <Image src={v} width='100%' height={365}/>\r\n                                        </div>\r\n                                    )\r\n                                })}\r\n                            </Slider>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <Descriptions size=\"small\" layout=\"vertical\" bordered className=\"ant-descriptions-container\">\r\n                        {/* title */}\r\n                        <Descriptions.Item label=\"제목 \"span={3} className=\"ant-descriptions-item-text\">{props.row.title}</Descriptions.Item>\r\n                        {/* division */}\r\n                        <Descriptions.Item label=\"공간\">{props.row.division}</Descriptions.Item>\r\n                        {/* area */}\r\n                        <Descriptions.Item label=\"평형대\">{props.row.area}평대</Descriptions.Item>\r\n                        {/* office */}\r\n                        <Descriptions.Item label=\"지점\">{props.row.office}</Descriptions.Item>\r\n\r\n                        {/* color */}\r\n                        <Descriptions.Item label=\"색상\">{props.row.color.map(x => `${x} `)} </Descriptions.Item>\r\n                        {/* section */}\r\n                        <Descriptions.Item label=\"영역\">{props.row.section.map(x => `${x} `)}</Descriptions.Item>\r\n                        {/* style */}\r\n                        <Descriptions.Item label=\"스타일\">{props.row.style.map(x => `${x} `)}</Descriptions.Item>\r\n                        \r\n                        {/* best */}\r\n                        <Descriptions.Item label=\"베스트\">\r\n                            <Badge status={props.row.best ? \"success\": \"error\"} text={props.row.best ? \"Yes\": \"No\"} />\r\n                        </Descriptions.Item>\r\n\r\n                        {/* date */}\r\n                        <Descriptions.Item label=\"등록 날짜\" span={2}>{props.row.date}</Descriptions.Item>\r\n                    \r\n                        {/* info */}\r\n                        <Descriptions.Item label=\"세부내용\" span={3} className=\"ant-descriptions-item-text\">{props.row.info}</Descriptions.Item>\r\n\r\n                        {/* content */}\r\n                        <Descriptions.Item label=\"내용\" span={3} className=\"ant-descriptions-item-text\">\r\n                            <div dangerouslySetInnerHTML={createMarkup(props.row.content)}></div>\r\n                        </Descriptions.Item>\r\n\r\n                    </Descriptions>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Item)\r\n","import React from 'react'\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nimport {InputLabel, MenuItem, Select, FormControl, Chip, Input} from '@material-ui/core';\r\n\r\n\r\nconst toKR = (name) => {\r\n    switch (name) {\r\n        case 'division':\r\n            return '공간'\r\n        case 'color':\r\n            return '색상'\r\n        case 'area':\r\n            return '평수'\r\n        case 'style':\r\n            return '스타일'\r\n        case 'section':\r\n            return '영역'\r\n        default:\r\n            break;\r\n    }\r\n}\r\n\r\nfunction TestSelect(props) {\r\n    const [selectArray, setSelectArray] = React.useState(props.default === '' ? [] : props.default)\r\n\r\n    const handleChange = (data, onChange) => {\r\n        setSelectArray(data);\r\n        onChange(data)\r\n        \r\n    }\r\n\r\n    const renderJsx = (onChange, value)=> {\r\n        return props.index > 1 ? \r\n        ( \r\n            <FormControl variant=\"outlined\" style={{width: '95%', padding: '0.2rem', marginBottom: '1rem', marginLeft: '1rem'}} error={props.errorCheck.error}> \r\n                <InputLabel id={props.field}><span style={{fontSize: '17px'}}>{toKR(props.field)}</span></InputLabel>\r\n                <Select labelId={props.field} value={value = selectArray} onChange={(e)=>handleChange(e.target.value, onChange)} \r\n                    input={<Input />} multiple \r\n                    renderValue={(selected) => (\r\n                        <div>\r\n                            {selected.map((value) => (\r\n                                <Chip key={value} label={value} />\r\n                            ))}\r\n                        </div>\r\n                    )}\r\n                >\r\n                    <MenuItem value=\"\">\r\n                        <em>선택해주세요</em>\r\n                    </MenuItem>\r\n                    {props.value.map((v,i) => <MenuItem key={i} value={v}>{v}</MenuItem>)}\r\n                </Select> \r\n            </FormControl>\r\n        ) : (\r\n            <FormControl variant=\"outlined\" style={{width: '50%', padding: '0.2rem', marginBottom: '1rem'}} error={props.errorCheck.error}> \r\n                <InputLabel id={props.field}><span style={{fontSize: '17px'}}>{toKR(props.field)}</span></InputLabel>\r\n                <Select label={toKR(props.field)} labelId={props.field} defaultValue={props.default} onChange={(e)=>onChange(e.target.value)}>\r\n                    <MenuItem value=\"\">\r\n                        <em>선택해주세요</em>\r\n                    </MenuItem>\r\n                    {props.value.map((v,i) => <MenuItem key={i} value={v}>{v}</MenuItem>)}\r\n                </Select>\r\n            </FormControl>\r\n        )\r\n    }\r\n    return (\r\n            <>\r\n                <Controller name={props.field} \r\n                            control={props.control} \r\n                            defaultValue={props.default} \r\n                            rules={{ validate: (value) => value !== \"\" }}\r\n                            render={({onChange, value}) => (\r\n                               renderJsx(onChange, value)\r\n                            )}\r\n                />\r\n            </>\r\n    )\r\n}\r\n\r\nexport default React.memo(TestSelect)\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport {Upload, Modal, message} from 'antd';\r\nimport {PlusOutlined} from '@ant-design/icons'\r\n\r\nimport Notifications from '../../../commons/Notifications'\r\n\r\n\r\nfunction ImageUpload(props) {\r\n    const [previewVisible, setPreviewVisible] = React.useState(false)\r\n    const [previewImage, setPreviewImage] = React.useState('')\r\n    const [previewTitle, setPreviewTitle] = React.useState('')\r\n    const [imagePath, setImagePath] = React.useState(props.image);\r\n    const [fileList, setFileList] = React.useState(props.default === '' ? [] : props.default.map((v,i)=> {\r\n        return {\r\n            uid: i + 1,\r\n            name: v.split(\"/\")[3],\r\n            status: 'done',\r\n            url: v\r\n        }        \r\n    }))\r\n\r\n    const getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n          const reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.onload = () => resolve(reader.result);\r\n          reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n\r\n        setPreviewVisible(true)\r\n        setPreviewImage(file.url || file.preview)\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1))\r\n    } \r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n      \r\n  \r\n    const options = {\r\n        onPreview: (file) => {handlePreview(file)},\r\n        onRemove: file => {\r\n        axios.delete(file.url).then((response) => {\r\n            if(response.data.success) {\r\n                const index = fileList.indexOf(file);\r\n                const newFileList = fileList.slice();\r\n                const newImagePath = imagePath.slice();\r\n                newImagePath.splice(index, 1);\r\n                newFileList.splice(index, 1);\r\n                setFileList(newFileList);\r\n                setImagePath(newImagePath);\r\n            }\r\n            Notifications(response.data);\r\n        });\r\n        },    \r\n        listType: \"picture-card\",\r\n        beforeUpload:  (file) => {\r\n            const isFileType = (file.type === \"image/jpeg\") || (file.type === \"image/png\");\r\n            if(isFileType) {\r\n            const formData = new FormData();\r\n            formData.append('file', file);\r\n            axios.post(\"/api/images\", formData).then(response => {\r\n                const newData = {\r\n                        uid: fileList.length + 1,\r\n                        name: file.name,\r\n                        status: 'done',\r\n                        url: `/api/images/${response.data.url}`\r\n                }\r\n                const newImagePath = [...imagePath, newData.url];\r\n                setFileList([...fileList, newData]);\r\n                setImagePath(newImagePath)\r\n                props.setImage({image: newImagePath});\r\n                \r\n            })\r\n            } else message.error('jpeg나 png인 이미지 파일 형식만 업로드 가능합니다.');\r\n            \r\n            return false;\r\n        },\r\n        fileList\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n            <Upload {...options}>\r\n            {fileList.length < 3 && (\r\n                <div>\r\n                    <PlusOutlined />\r\n                    <div style={{ marginTop: 8 }}>Upload</div>\r\n                </div>\r\n            )}\r\n            </Upload>\r\n        \r\n            <Modal visible={previewVisible} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                <img alt=\"preview\" style={{ width: '100%' }} src={previewImage} />\r\n            </Modal>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(ImageUpload)\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { Controller } from \"react-hook-form\";\r\n\r\nimport {Row, Col} from 'antd';\r\nimport {TextField, Checkbox, RadioGroup, FormControlLabel, Radio} from '@material-ui/core';\r\n\r\nimport Select from './Form-Select'\r\nimport ImageUpload from './ImageUpload'\r\n\r\n\r\nconst data = [\"area\", \"division\", \"color\", \"style\", \"section\"];\r\nconst radio = [\"삼호\", \"다온\"]\r\n\r\nfunction TestForm(props) {\r\n    const [elements, setElements] = React.useState(null);\r\n\r\n    const handleValue = (name) => {\r\n        if(props.default === undefined) return '';\r\n        return props.default[name] \r\n    }\r\n\r\n    const fetchElements = async () => {\r\n        const response = await axios.get('/api/elements');\r\n        const result = response.data.data[0];\r\n        setElements(result); \r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchElements();\r\n    }, [])\r\n    \r\n    return (\r\n        <div>\r\n            {/* title */}\r\n            <div id=\"form-text-container\">\r\n                <Controller name=\"title\" control={props.control} defaultValue={handleValue('title')} rules={{ required: true }}\r\n                            render={({onChange}) => (\r\n                                <TextField  style={{width: '100%'}}\r\n                                            error={props.errorCheck.title.error}\r\n                                            helperText={props.errorCheck.title.msg}\r\n                                            label={<span style={{fontSize: '17px'}}>제목</span>} \r\n                                            variant=\"outlined\" \r\n                                            onChange={(e)=>onChange(e.target.value)}\r\n                                            defaultValue={handleValue('title')}\r\n                                           \r\n                                />\r\n                            )}\r\n                />                \r\n            </div>\r\n\r\n            <Row>\r\n                {/* office and best */}\r\n                <Col span={10} id=\"form-left-container\">\r\n                    <Row id=\"form-left-content\">\r\n                        <Col span={12}>\r\n                            <label id=\"form-radio-check-label\">지점</label>\r\n                            <div id=\"form-radio-check-container\">\r\n                                <Controller name=\"office\" control={props.control} defaultValue={handleValue('office')} render={({onChange, value}) => (\r\n                                            <RadioGroup aria-label=\"지점\" defaultValue={handleValue('office')} value={value} onChange={onChange} >\r\n                                                {radio.map((v, i) => {\r\n                                                    return handleValue('office') === v ? \r\n                                                    (<FormControlLabel key={i} value={v} control={<Radio size='small' />} label={v} />) \r\n                                                    : \r\n                                                    (<FormControlLabel key={i} value={v} control={<Radio size='small' />} label={v} />)\r\n                                                })}\r\n                                            </RadioGroup>\r\n                                )}/>                \r\n                            </div>\r\n                        </Col>\r\n                        <Col span={12}>\r\n                            <label id=\"form-radio-check-label\">베스트</label>\r\n                            <div id=\"form-radio-check-container\">\r\n                                <Controller name=\"best\" control={props.control} defaultValue={handleValue('best') === '' ? false : handleValue('best')} render={({onChange, value}) => (\r\n                                                <Checkbox checked={value} onChange={(e)=>onChange(e.target.checked)} />\r\n                                            )}\r\n                                />\r\n                            </div>\r\n                        </Col>\r\n                    </Row> \r\n                </Col>\r\n\r\n                {/* 셀렉트문 반복 */}\r\n                <Col span={14}>\r\n                    <div id=\"form-text-container\">\r\n                        {(elements !== null) && data.map( (value, index) => {\r\n                                return <Select key={index} index={index} default={handleValue(value)} field={value} value={elements[value]} control={props.control} errors={props.errors} errorCheck={props.errorCheck[value]} />\r\n                            })\r\n                        }\r\n                    </div>\r\n                </Col>\r\n            </Row>         \r\n            \r\n            <div id=\"form-image-container\">\r\n                <label id=\"form-radio-check-label\">메인이미지</label>\r\n                <ImageUpload image={(Object.keys(props.image).length === 0) ? [] : Object.values(props.image)[0]} setImage={props.setImage} default={handleValue('image')} />\r\n            </div>\r\n\r\n            {/* info */}\r\n            <div id=\"form-text-container\">\r\n                <Controller name=\"info\" control={props.control} defaultValue={handleValue('info')} rules={{ required: true }}\r\n                            render={({onChange}) => (\r\n                                    <TextField  style={{width: '100%'}}\r\n                                                error={props.errorCheck.info.error}\r\n                                                helperText={props.errorCheck.info.msg}\r\n                                                label={<span style={{fontSize: '17px'}}>세부 내용</span>} \r\n                                                variant=\"outlined\" \r\n                                                onChange={(e)=>onChange(e.target.value)}\r\n                                                defaultValue={handleValue('info')}\r\n                                    />\r\n                            )}\r\n                />                \r\n            </div>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(TestForm)\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport {EditorState, convertToRaw} from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\n\r\nimport { Button, Space, message, Tooltip, BackTop} from 'antd';\r\nimport {AppstoreOutlined, PlusOutlined} from '@ant-design/icons'\r\n\r\nimport Form from './Form';\r\nimport Notifications from '../../../commons/Notifications'\r\n\r\n\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\n\r\n\r\nfunction Add(props) {\r\n    const { handleSubmit, control, errors } = useForm();\r\n    const [errorCheck, setErrorCheck] = React.useState({\r\n        title :  { error: false, msg: null},\r\n        info :  { error: false, msg: null},\r\n        color :  { error: false, msg: null},\r\n        style :  { error: false, msg: null},\r\n        area :  { error: false, msg: null},\r\n        division :  { error: false, msg: null},\r\n        section :  { error: false, msg: null}\r\n    });\r\n    const [editorState, setEditorState] = React.useState(() => EditorState.createEmpty());\r\n    const [image, setImage] = React.useState({});\r\n    const [editorImage, setEditorImage] = React.useState([]);\r\n\r\n    const onSubmit = data => {\r\n        data[Object.keys(image)[0]] = Object.values(image)[0];\r\n        axios.post('/api/cases', data).then(response => {\r\n            if(response.data.success) {\r\n                const oldData = props.dataSource;\r\n                const newData = response.data.row;\r\n                props.setDataSource([...oldData, newData]);\r\n                props.setView('list');\r\n            }\r\n            Notifications(response.data);\r\n        });\r\n\r\n    }\r\n    \r\n    const onEditorStateChange = (editorState) => {\r\n        setEditorState(editorState);\r\n    };\r\n\r\n    const uploadImageCallBack =  (file) => {\r\n        return new Promise(\r\n          (resolve, reject) => {\r\n            const isFileType = (file.type === \"image/jpeg\") || (file.type === \"image/png\");\r\n            if (isFileType) {\r\n                let uploadedImages = editorImage;\r\n                const formData = new FormData();\r\n                formData.append('file', file);\r\n                axios.post(\"/api/images\", formData).then((response) => {\r\n                    const imageObject = { file: file, localSrc: `/api/images/${response.data.url}`}\r\n                    uploadedImages.push(imageObject);\r\n                    setEditorImage(uploadedImages)\r\n                    resolve({ data: { link: imageObject.localSrc } });\r\n                })        \r\n            } else {\r\n                reject(message.error('jpeg나 png인 이미지 파일 형식만 업로드 가능합니다.'))\r\n            }\r\n            \r\n          }\r\n        );\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        const newData = {\r\n            title : errors.title ? { error: true, msg: '입력해주세요' } : { error: false, msg: null},\r\n            info : errors.info ? { error: true, msg: '입력해주세요' } : { error: false, msg: null},\r\n            color : errors.color ? { error: true, msg: '입력해주세요' } : { error: false, msg: null},\r\n            style : errors.style ? { error: true, msg: '입력해주세요' } : { error: false, msg: null},\r\n            area : errors.area ? { error: true, msg: '입력해주세요' } : { error: false, msg: null},\r\n            division : errors.division ? { error: true, msg: '입력해주세요' } : { error: false, msg: null},\r\n            section : errors.section ? { error: true, msg: '입력해주세요' } : { error: false, msg: null}\r\n        }\r\n\r\n        setErrorCheck(newData);\r\n   \r\n    }, [errors.title,errors.info,errors.color,errors.style,errors.area,errors.division,errors.section])\r\n\r\n    return ( \r\n        <>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <div id=\"admin-cases-add-buttons\">\r\n                    <Space>\r\n                        <Tooltip title=\"목록\">\r\n                            <Button onClick={()=>{props.setView('list')}} shape=\"round\" icon={<AppstoreOutlined />} />\r\n                        </Tooltip>\r\n                        <Tooltip title=\"추가\">\r\n                            <Button htmlType=\"submit\" shape=\"round\" icon={<PlusOutlined />} />\r\n                        </Tooltip>\r\n                        \r\n                    </Space>\r\n                </div>\r\n                \r\n                <div id=\"admin-cases-add-container\">\r\n                    <BackTop visibilityHeight={150} />\r\n                    <div id=\"admin-cases-add-content\">\r\n                            {/* Form */}\r\n                            <div id=\"admin-cases-add-form\">\r\n                                <Form control={control} errors={errors} errorCheck={errorCheck} image={image} setImage={setImage} />\r\n                            </div>\r\n\r\n                            {/* Editor */}\r\n                            <div id=\"admin-cases-add-editor\">\r\n                                <Controller name=\"content\" control={control} defaultValue=\"\"  render={({onChange}) => (\r\n                                    <Editor\r\n                                        toolbar={{ \r\n                                            options: ['inline',  'fontSize', 'list', 'textAlign', 'colorPicker', 'emoji', 'image', 'history'],\r\n                                            inline: { options: ['bold', 'italic', 'underline', 'strikethrough']},\r\n                                            list: { inDropdown: true}, \r\n                                            textAlign: { inDropdown: true },\r\n                                            history: { inDropdown: false },\r\n                                            image: { uploadCallback: uploadImageCallBack, \r\n                                                        previewImage: true, defaultSize: {height: '400',width: '500'},\r\n                                                        inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg'  }\r\n                                        }} \r\n                                        toolbarStyle={{ border: '2px solid #f1f1f1', padding: '6px 5px 0', borderRadius: '4px'}}\r\n                                        placeholder=\"내용을 작성해주세요.\"\r\n                                        localization={{ locale: 'ko' }}\r\n                                        editorState={editorState}\r\n                                        onChange={() => onChange(draftToHtml(convertToRaw(editorState.getCurrentContent())))}\r\n                                        onEditorStateChange={(editorState) => onEditorStateChange(editorState)}\r\n\r\n                                    />\r\n                                )} />\r\n                            </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Add)\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport { useForm, Controller } from \"react-hook-form\";\r\n\r\nimport { Button, Space, message, Tooltip } from 'antd';\r\nimport {AppstoreOutlined, ArrowDownOutlined} from '@ant-design/icons'\r\n\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport {EditorState, convertToRaw, ContentState} from 'draft-js';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\n\r\nimport Notifications from '../../../commons/Notifications'\r\nimport Form from './Form';\r\n\r\n\r\n\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport 'draft-js/dist/Draft.css';\r\n\r\n\r\nfunction Edit(props) {\r\n    const { handleSubmit, control, errors } = useForm();\r\n    const [errorCheck, setErrorCheck] = React.useState({\r\n        title :  { error: false, msg: null},\r\n        info :  { error: false, msg: null},\r\n        color :  { error: false, msg: null},\r\n        style :  { error: false, msg: null},\r\n        area :  { error: false, msg: null},\r\n        division :  { error: false, msg: null},\r\n        section :  { error: false, msg: null}\r\n    });\r\n    const [editorState, setEditorState] = React.useState(() => EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(props.row.content).contentBlocks)));\r\n    const [image, setImage] = React.useState({});\r\n    const [editorImage, setEditorImage] = React.useState([]);\r\n\r\n    const onSubmit = data => {\r\n        data['_id'] = props.row._id\r\n        data[Object.keys(image)[0]] = Object.values(image)[0];\r\n        axios.patch(`/api/cases/${props.row._id}`, data).then(response => {\r\n            if(response.data.success) {\r\n                const oldData = props.dataSource;\r\n                const newData = oldData.map(r => {\r\n                    (r._id === data._id) ? console.log('equal') : console.log('not equal');\r\n                    return (r._id === data._id) ? data : r\r\n                })\r\n                \r\n                props.setDataSource([...newData]);\r\n                props.setView('list');\r\n                props.setRow({});\r\n            }\r\n            Notifications(response.data);\r\n        });\r\n    }\r\n    \r\n    const onEditorStateChange = (editorState) => {\r\n        setEditorState(editorState);\r\n    };\r\n\r\n    const uploadImageCallBack =  (file) => {\r\n        return new Promise(\r\n          (resolve, reject) => {\r\n            const isFileType = (file.type === \"image/jpeg\") || (file.type === \"image/png\");\r\n            if (isFileType) {\r\n                let uploadedImages = editorImage;\r\n                const formData = new FormData();\r\n                formData.append('file', file);\r\n                axios.post(\"/api/images\", formData).then((response) => {\r\n                    const imageObject = { file: file, localSrc: `/api/images/${response.data.url}`}\r\n                    uploadedImages.push(imageObject);\r\n                    setEditorImage(uploadedImages)\r\n                    resolve({ data: { link: imageObject.localSrc } });\r\n                })        \r\n            } else {\r\n                reject(message.error('jpeg나 png인 이미지 파일 형식만 업로드 가능합니다.'))\r\n            }\r\n            \r\n          }\r\n        );\r\n    }\r\n    \r\n    React.useEffect(() => {\r\n        setImage({image : props.row.image});\r\n    }, [props.row.image])\r\n\r\n    React.useEffect(() => {\r\n        const newData = {\r\n            title : errors.title ? { error: true, msg: '입력해주세요' } : { error: false, msg: null},\r\n            info : errors.info ? { error: true, msg: '입력해주세요' } : { error: false, msg: null},\r\n            color : errors.color ? { error: true, msg: '입력해주세요' } : { error: false, msg: null},\r\n            style : errors.style ? { error: true, msg: '입력해주세요' } : { error: false, msg: null},\r\n            area : errors.area ? { error: true, msg: '입력해주세요' } : { error: false, msg: null},\r\n            division : errors.division ? { error: true, msg: '입력해주세요' } : { error: false, msg: null},\r\n            section : errors.section ? { error: true, msg: '입력해주세요' } : { error: false, msg: null}\r\n        }\r\n\r\n        setErrorCheck(newData);\r\n   \r\n    }, [errors.title,errors.info,errors.color,errors.style,errors.area,errors.division,errors.section])\r\n    \r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            <div id=\"admin-cases-edit-buttons\">\r\n                <Space>\r\n                    <Tooltip title=\"목록\">\r\n                        <Button onClick={()=>{props.setView('list')}} shape=\"round\" icon={<AppstoreOutlined />} />\r\n                    </Tooltip>\r\n                    <Tooltip title=\"저장\">\r\n                        <Button htmlType=\"submit\" shape=\"round\" icon={<ArrowDownOutlined />} />\r\n                    </Tooltip>\r\n                </Space>\r\n            </div>\r\n            \r\n            <div id=\"admin-cases-edit-container\">\r\n                <div id=\"admin-cases-edit-content\">\r\n                        {/* Form Data */}\r\n                        <div id=\"admin-cases-edit-form\">\r\n                            {Object.keys(image).length !== 0 && \r\n                                <Form control={control} errors={errors} errorCheck={errorCheck} image={image} setImage={setImage} default={props.row} />\r\n                            }\r\n                        </div>\r\n\r\n                        {/* Editor */}\r\n                        <div id=\"admin-cases-edit-editor\">\r\n                            <Controller name=\"content\" control={control} defaultValue={props.row.content}  render={({onChange}) => (\r\n                                <Editor\r\n                                    toolbar={{ \r\n                                        options: ['inline',  'fontSize', 'list', 'textAlign', 'colorPicker', 'emoji', 'image', 'history'],\r\n                                        inline: { options: ['bold', 'italic', 'underline', 'strikethrough'] },\r\n                                        list: { inDropdown: true}, \r\n                                        textAlign: { inDropdown: true },\r\n                                        history: { inDropdown: false },\r\n                                        image: { uploadCallback: uploadImageCallBack, previewImage: true, \r\n                                                defaultSize: {height: '400',width: '500'},\r\n                                                inputAccept: 'image/jpeg,image/jpg,image/png'}\r\n                                    }} \r\n                                    toolbarStyle={{ border: '2px solid #f1f1f1', padding: '6px 5px 0', borderRadius: '4px'}}\r\n                                    placeholder=\"내용을 작성해주세요.\"\r\n                                    localization={{ locale: 'ko' }}\r\n                                    editorState={editorState}\r\n                                    onChange={() => onChange(draftToHtml(convertToRaw(editorState.getCurrentContent())))}\r\n                                    onEditorStateChange={onEditorStateChange}\r\n                                />\r\n                            )} />\r\n                        </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Edit)\r\n","import React from 'react'\r\nimport axios from 'axios';\r\n\r\nimport Load from './CaseComponents/Load'\r\nimport List from './CaseComponents/List'\r\nimport Item from './CaseComponents/Item'\r\nimport Add from './CaseComponents/Add'\r\nimport Edit from './CaseComponents/Edit'\r\n\r\nimport  './css/Admin.css';\r\n\r\nfunction AdminCasePage() {\r\n    const [row, setRow] = React.useState({});\r\n    const [hover, setHover] = React.useState(false);\r\n    const [view, setView] = React.useState('load');\r\n    const [dataSource, setDataSource] = React.useState([]);\r\n\r\n    const fetchCases = async () => {\r\n        const result = await (await axios.get('/api/cases')).data.data\r\n        setDataSource(result === undefined ? [] : result);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setTimeout(() => {\r\n            fetchCases();\r\n            setView('list');\r\n        },300);\r\n        \r\n    }, [])\r\n    \r\n    switch (view) {\r\n        case 'load':\r\n            return <Load />\r\n        case 'list':\r\n            return <List hover={hover} setHover={setHover} setView={setView} dataSource={dataSource} setDataSource={setDataSource} row={row} setRow={setRow}/>\r\n        case 'item':\r\n            return <Item setView={setView} row={row} setRow={setRow} dataSource={dataSource} setDataSource={setDataSource} />\r\n        case 'add':\r\n            return <Add setView={setView} dataSource={dataSource} setDataSource={setDataSource} />\r\n        case 'edit': \r\n            window.scrollTo(0, 0);\r\n            return <Edit setView={setView} row={row} setRow={setRow} dataSource={dataSource} setDataSource={setDataSource} />\r\n\r\n        default:\r\n            // TODO: Mapping to error page\r\n            break;\r\n    }\r\n}\r\n\r\nexport default React.memo(AdminCasePage)\r\n","import React from 'react'\r\nimport { Spin } from 'antd';\r\n\r\nfunction Load() {\r\n    return (\r\n        <div id=\"admin-load\">\r\n            <Spin size=\"large\" tip=\"데이터 가져오는중...\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Load)\r\n","import React from 'react'\r\n\r\nimport Slider from \"react-slick\";\r\n\r\nimport {Image} from 'antd';\r\n\r\nimport '../css/slick.css';\r\nimport '../css/slick-theme.css';\r\n\r\nfunction ImageSlider(props) {\r\n\r\n    const settings = {\r\n        customPaging: function(i) {\r\n            return (\r\n              <a href=\"#!\">\r\n                <img src={props.image[i]} style={{width: '100%', height:'70px'}} alt=\"test\" />\r\n              </a>\r\n            );\r\n          },\r\n          dots: true,\r\n          dotsClass: \"slick-dots slick-thumb\",\r\n          infinite: true,\r\n          speed: 500,\r\n          slidesToShow: 1,\r\n          slidesToScroll: 1\r\n    };\r\n\r\n    return (\r\n        <Slider {...settings} className=\"slide-view-size\">\r\n            {props.image && props.image.map((v,i) => {\r\n                return (\r\n                    <div key={i}> \r\n                        <Image src={v} width='100%' height={365}/>\r\n                    </div>\r\n                )\r\n            })}\r\n        </Slider>\r\n    )\r\n}\r\n\r\nexport default React.memo(ImageSlider)\r\n","import React from 'react'\r\nimport axios from 'axios'\r\nimport {Upload, Modal, message, InputNumber, Button, Tooltip, Space, Form} from 'antd';\r\n\r\nimport {PlusOutlined, CheckOutlined} from '@ant-design/icons'\r\n\r\nimport Notifications from '../../../commons/Notifications'\r\n\r\n\r\nfunction ImageUpload(props) {\r\n    /**\r\n     * props : \r\n     * dataSource : Object { no: Number : 1, image : Array, limit: Number : 1 }\r\n     * setDataSource : function\r\n     */\r\n    const [previewVisible, setPreviewVisible] = React.useState(false)\r\n    const [previewImage, setPreviewImage] = React.useState('')\r\n    const [previewTitle, setPreviewTitle] = React.useState('')\r\n\r\n    const [limit, setLimit] = React.useState(props.dataSource.limit);\r\n    const [imagePath, setImagePath] = React.useState(props.dataSource.image);\r\n    const [fileList, setFileList] = React.useState(props.dataSource.image.length === 0 ? [] : props.dataSource.image.map((v,i)=> {\r\n        return {\r\n            uid: i + 1,\r\n            name: v.split(\"/\")[3],\r\n            status: 'done',\r\n            url: v\r\n        }        \r\n    }))\r\n    \r\n\r\n    const onSubmit = data => {\r\n        data['image'] = imagePath;\r\n       \r\n        axios.post('/api/slides', data).then(response => {\r\n            if(response.data.success) {\r\n                props.setDataSource(response.data.data)\r\n                window.scrollTo(0, 0);\r\n            }\r\n            Notifications(response.data);\r\n        });\r\n\r\n    }\r\n\r\n    const getBase64 = (file) => {\r\n        return new Promise((resolve, reject) => {\r\n          const reader = new FileReader();\r\n          reader.readAsDataURL(file);\r\n          reader.onload = () => resolve(reader.result);\r\n          reader.onerror = error => reject(error);\r\n        });\r\n    }\r\n\r\n    const handlePreview = async (file) => {\r\n        if (!file.url && !file.preview) {\r\n            file.preview = await getBase64(file.originFileObj);\r\n        }\r\n\r\n        setPreviewVisible(true)\r\n        setPreviewImage(file.url || file.preview)\r\n        setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1))\r\n    } \r\n\r\n    const handleCancel = () => setPreviewVisible(false);\r\n      \r\n  \r\n    const options = {\r\n        onPreview: (file) => {handlePreview(file)},\r\n        onRemove: file => {\r\n            axios.delete(file.url).then((response) => {\r\n                if(response.data.success) {\r\n                    const index = fileList.indexOf(file);\r\n                    const newFileList = fileList.slice();\r\n                    const newImagePath = imagePath.slice();\r\n                    newImagePath.splice(index, 1);\r\n                    newFileList.splice(index, 1);\r\n                    setFileList(newFileList);\r\n                    setImagePath(newImagePath);\r\n                }\r\n                Notifications(response.data);\r\n            });\r\n        },    \r\n        listType: \"picture-card\",\r\n        beforeUpload:  (file) => {\r\n            const isFileType = (file.type === \"image/jpeg\") || (file.type === \"image/png\");            \r\n            if(isFileType) {\r\n                const formData = new FormData();\r\n                formData.append('file', file);\r\n                axios.post(\"/api/images\", formData).then(response => {\r\n                    const newData = {\r\n                            uid: fileList.length + 1,\r\n                            name: file.name,\r\n                            status: 'done',\r\n                            url: `/api/images/${response.data.url}`\r\n                    }\r\n                    const newImagePath = [...imagePath, newData.url];\r\n                    setFileList([...fileList, newData]);\r\n                    setImagePath(newImagePath)\r\n                })\r\n            } else message.error('jpeg나 png인 이미지 파일 형식만 업로드 가능합니다.');\r\n            \r\n            return false;\r\n        },\r\n        fileList\r\n    };\r\n    \r\n    return (\r\n        <div style={{width: '100%'}}>\r\n            <Form name=\"basic\" onFinish={onSubmit} initialValues={{limit:limit}}>\r\n                <div id=\"admin-cases-list-add\">\r\n                    <Space>\r\n                        <Tooltip title=\"이미지 개수\">\r\n                            <Form.Item name=\"limit\">\r\n                                <InputNumber  min={props.dataSource.image.length} max={10} onChange={setLimit} />\r\n                            </Form.Item>\r\n                            \r\n                        </Tooltip>\r\n                        <Form.Item>\r\n                        <Tooltip title=\"데이터 저장\">\r\n                            <Button htmlType=\"submit\" shape=\"round\" icon={<CheckOutlined />} />\r\n                        </Tooltip>\r\n                        </Form.Item>\r\n                    </Space>\r\n                    \r\n                </div>\r\n                \r\n                <Upload {...options}>\r\n                {fileList.length < limit && (\r\n                    <div>\r\n                        <PlusOutlined />\r\n                        <div style={{ marginTop: 8 }}>Upload</div>\r\n                    </div>\r\n                )}\r\n                </Upload>\r\n            \r\n                <Modal visible={previewVisible} title={previewTitle} footer={null} onCancel={handleCancel}>\r\n                    <img alt=\"preview\" style={{ width: '100%' }} src={previewImage} />\r\n                </Modal>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(ImageUpload)\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport {Row} from 'antd'\r\n\r\nimport ImageSlider from './ImageSlider'\r\nimport ImageUpload from './ImageUpload'\r\n\r\nfunction List() {\r\n    /** dataSource : Object\r\n     *  no : Number : default and static 1 \r\n     *  image: Array \r\n     *  limit : Number : default 1\r\n     */\r\n    const [dataSource, setDataSource] = React.useState(null);\r\n  \r\n\r\n    const fetchImage = async () => {\r\n        const result = await (await axios.get('/api/slides')).data\r\n        setDataSource(result.data.length === 0 ? {no: 1, image: [], limit: 1} : result.data[0]);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        fetchImage();\r\n    }, [])\r\n    \r\n    return (\r\n        <>\r\n            <div id=\"admin-slides-slider-container\">\r\n                {dataSource !== null && dataSource.image.length !== 0 && (\r\n                        <div id=\"admin-slides-slider-content\">\r\n                            <div id=\"slide-view-container\">\r\n                                <div id=\"slide-view-content\">\r\n                                    {dataSource !== null && <ImageSlider image={dataSource.image} />}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                }\r\n                \r\n                <Row id=\"admin-slides-upload\">\r\n                    {dataSource !== null && <ImageUpload dataSource={dataSource} setDataSource={setDataSource} /> }  \r\n                </Row>\r\n            </div>    \r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(List)\r\n","import React from 'react'\r\n\r\nimport Load from './SlideComponents/Load'\r\nimport List from './SlideComponents/List'\r\n\r\n\r\nfunction AdminSlidePage() {    \r\n    const [view, setView] = React.useState('load');\r\n    \r\n    React.useEffect(() => {\r\n        setTimeout(() => {            \r\n            setView('list');\r\n        }, 300);\r\n    }, [])\r\n\r\n    switch (view) {\r\n        case 'load':\r\n            return <Load />\r\n        case 'list':\r\n            return <List />\r\n        default:\r\n            // TODO: Mapping to error page\r\n            break;\r\n    }\r\n}\r\n\r\nexport default React.memo(AdminSlidePage)\r\n","import React from 'react'\r\nimport { Spin } from 'antd';\r\n\r\nfunction Load() {\r\n    return (\r\n        <div id=\"admin-load\">\r\n            <Spin size=\"large\" tip=\"데이터 가져오는중...\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Load)\r\n","import React from 'react'\r\nimport { Result } from 'antd';\r\n\r\nimport {SmileOutlined} from '@ant-design/icons'\r\n\r\nfunction Null() {\r\n    return (\r\n        <div id=\"admin-null\">\r\n            <Result icon={<SmileOutlined />} title=\"데이터를 추가해주세요\" />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default React.memo(Null)","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { Tooltip, Button, Table, Modal, BackTop} from 'antd'\r\nimport { PlusOutlined, ExclamationCircleOutlined, DeleteOutlined  } from '@ant-design/icons'\r\n\r\nimport Null from './Null'\r\nimport Notifications from '../../../commons/Notifications'\r\n\r\nfunction List(props) {\r\n    const handleRemove= (no) => {\r\n        Modal.confirm({\r\n            title: '삭제하시겠습니까?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: '한번 삭제하면 복구가 어렵습니다.',\r\n            okText: '삭제',\r\n            okType: 'danger',\r\n            cancelText: '취소',\r\n            onOk() {\r\n                const newData = props.dataSource.filter( x => x.no !== no);\r\n                axios.delete(`/api/orders/${no}`).then(response => {\r\n                    if(response.data.success) {\r\n                        props.setDataSource(newData);\r\n                        window.scrollTo(0, 0)\r\n                    }\r\n                    Notifications(response.data)\r\n                })                \r\n            },\r\n            onCancel() {\r\n                return false;\r\n            }\r\n          });\r\n    }\r\n\r\n    const handleItem = (no) => {\r\n        props.setNo(no)\r\n        props.setView('item')\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n          title: '번호',\r\n          dataIndex: 'no',\r\n          key: 'no'\r\n        },\r\n        {\r\n          title: '고객명',\r\n          dataIndex: 'name',\r\n          key: 'name',\r\n          render: (text,record) => <a href=\"#!\" onClick={()=>{handleItem(record.no)}}>{text}</a>\r\n        },\r\n        {\r\n          title: '',\r\n          key: 'action',\r\n          width: 100,\r\n          render: (_, record) => (\r\n            <Tooltip title=\"삭제\">\r\n                <Button onClick={()=>handleRemove(record.no)} shape=\"round\" icon={<DeleteOutlined />} />\r\n            </Tooltip>\r\n          ),\r\n        },\r\n    ];\r\n    \r\n    const data = props.dataSource.map((v) => {\r\n            return {\r\n                no: v.no,\r\n                name: JSON.parse(v.data).name,\r\n                key: v.no\r\n            }\r\n    });\r\n\r\n    return (\r\n        <React.Fragment>\r\n                <BackTop visibilityHeight={200} />\r\n                <div id=\"admin-cases-list-add\">\r\n                    <Tooltip title=\"새 데이터 추가\">\r\n                        <Button onClick={()=> props.setView('add')} shape=\"round\" icon={<PlusOutlined />} />\r\n                    </Tooltip>\r\n                </div>\r\n\r\n                {props.dataSource.length === 0 ? (<Null />) : \r\n                    (\r\n                    <div id=\"admin-cases-list-content\">\r\n                        <Table columns={columns} dataSource={data} pagination={false} />\r\n                    </div>\r\n                     ) \r\n                }  \r\n               \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default React.memo(List)\r\n","import React from 'react'\r\nimport axios from 'axios';\r\n\r\n\r\nimport {Button, Descriptions, Space,  Modal,  Tooltip, Tag} from 'antd';\r\nimport {ExclamationCircleOutlined, AppstoreOutlined, DeleteOutlined} from '@ant-design/icons'\r\n\r\nimport Notifications from '../../../commons/Notifications'\r\n\r\nfunction Item(props) {\r\n    const [row, setRow] = React.useState(null);\r\n\r\n    const handleList = () => {\r\n        props.setView('list')\r\n        props.setNo(null);\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n    const handleRemove = () => {\r\n        Modal.confirm({\r\n            title: '삭제하시겠습니까?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: '한번 삭제하면 복구가 어렵습니다.',\r\n            okText: '삭제',\r\n            okType: 'danger',\r\n            cancelText: '취소',\r\n            onOk() {\r\n                const newData = props.dataSource.filter( x => x.no !== props.no);\r\n                axios.delete(`/api/orders/${props.no}`).then(response => {\r\n                    if(response.data.success) {\r\n                        props.setDataSource(newData);\r\n                        props.setView('list')\r\n                        props.setNo(null);\r\n                        window.scrollTo(0, 0)\r\n                    }\r\n                    Notifications(response.data)\r\n                })                \r\n            },\r\n            onCancel() {\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    const fetchData = async () => {\r\n        const result = await (await axios.get(`/api/orders/${props.no}`)).data.data\r\n        setRow(JSON.parse(result.data));\r\n    }\r\n\r\n    React.useEffect(() => {\r\n     fetchData();       \r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div id=\"admin-cases-item-buttons\">\r\n                <Space>\r\n                    <Tooltip title=\"목록\">\r\n                        <Button onClick={()=>handleList()} shape=\"round\" icon={<AppstoreOutlined />} />\r\n                    </Tooltip>\r\n                    <Tooltip title=\"삭제\">\r\n                        <Button onClick={()=>handleRemove()} shape=\"round\" icon={<DeleteOutlined />} />\r\n                    </Tooltip>\r\n                </Space>\r\n            </div>\r\n            {row !== null && (\r\n                <div id=\"admin-cases-item-container\"> \r\n                    <Descriptions size=\"small\" layout=\"vertical\" bordered className=\"ant-descriptions-container\">\r\n                        <Descriptions.Item label=\"고객명\">{row.name}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"주거지\" span={2}>{row.address}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"연락처\">{row.contact}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"이메일\">{row.email}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"공사 예상 날짜\">{row.expected_date.substring(0,10)}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"공사 예상 금액\">{row.expected_price}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"평형대\">{row.area}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"도배\">{row.papering.map((v,i) => <Tag key={i} color=\"default\">{v}</Tag>)}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"바닥재\">{row.flooring.map((v,i) => <Tag key={i} color=\"default\">{v}</Tag>)}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"마감재 공사\">{row.finishing_material.map((v,i) => <Tag key={i} color=\"default\">{v}</Tag>)}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"전기 조명\">{row.light.map((v,i) => <Tag key={i} color=\"default\">{v}</Tag>)}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"제작 가구\">{row.furniture.map((v,i) => <Tag key={i} color=\"default\">{v}</Tag>)}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"타일 공사\">{row.tile.map((v,i) => <Tag key={i} color=\"default\">{v}</Tag>)}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"욕실 공사\">{row.bathroom.map((v,i) => <Tag key={i} color=\"default\">{v}</Tag>)}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"확장 공사\">{row.expansion.map((v,i) => <Tag key={i} color=\"default\">{v}</Tag>)}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"샤시 공사\">{row.chassis.map((v,i) => <Tag key={i} color=\"default\">{v}</Tag>)}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"목공사\">{row.woodwork.map((v,i) => <Tag key={i} color=\"default\">{v}</Tag>)}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"아트월\">{row.artwall.map((v,i) => <Tag key={i} color=\"default\">{v}</Tag>)}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"기타 공사\">{row.etc.map((v,i) => <Tag key={i} color=\"default\">{v}</Tag>)}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"홈 스타일링\">{row.styling.map((v,i) => <Tag key={i} color=\"default\">{v}</Tag>)}</Descriptions.Item>\r\n                        <Descriptions.Item label=\"문의 사항\">{row.qna}</Descriptions.Item>                       \r\n                    </Descriptions>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Item)\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Load from './OrderComponents/Load'\r\nimport List from './OrderComponents/List'\r\nimport Item from './OrderComponents/Item'\r\n\r\nfunction AdminOrderPage() {\r\n    const [no, setNo] = React.useState(null);\r\n    const [view, setView] = React.useState('load');\r\n    const [dataSource, setDataSource] = React.useState([]);\r\n\r\n    const fetchData = async () => {\r\n        const result = await (await axios.get('/api/orders')).data.data\r\n        setDataSource(result === undefined ? [] : result);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setTimeout(() => {\r\n            fetchData();\r\n            setView('list');\r\n        },300);\r\n        \r\n    }, [])\r\n    \r\n    switch (view) {\r\n        case 'load':\r\n            return <Load />\r\n        case 'list':\r\n            return <List setView={setView} dataSource={dataSource} setDataSource={setDataSource} no={no} setNo={setNo}/>\r\n        case 'item':\r\n            return <Item setView={setView} no={no} setNo={setNo} dataSource={dataSource} setDataSource={setDataSource} />\r\n        default:\r\n            // TODO: Mapping to error page\r\n            break;\r\n    }\r\n}\r\n\r\nexport default React.memo(AdminOrderPage)\r\n\r\n","import React from 'react'\r\nimport { Spin } from 'antd';\r\n\r\nfunction Load() {\r\n    return (\r\n        <div id=\"admin-load\">\r\n            <Spin size=\"large\" tip=\"데이터 가져오는중...\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(Load)\r\n","import React from 'react'\r\nimport { Result } from 'antd';\r\n\r\nimport {SmileOutlined} from '@ant-design/icons'\r\n\r\nfunction Null() {\r\n    return (\r\n        <div id=\"admin-null\">\r\n            <Result icon={<SmileOutlined />} title=\"데이터를 추가해주세요\" />\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default React.memo(Null)","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { Tooltip, Button, Table, Modal, BackTop} from 'antd'\r\nimport { PlusOutlined, ExclamationCircleOutlined, DeleteOutlined  } from '@ant-design/icons'\r\n\r\nimport Null from './Null'\r\nimport Notifications from '../../../commons/Notifications'\r\n\r\nfunction List(props) {\r\n    const handleRemove= (no) => {\r\n        Modal.confirm({\r\n            title: '삭제하시겠습니까?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: '한번 삭제하면 복구가 어렵습니다.',\r\n            okText: '삭제',\r\n            okType: 'danger',\r\n            cancelText: '취소',\r\n            onOk() {\r\n                const newData = props.dataSource.filter( x => x.no !== no);\r\n                axios.delete(`/api/notices/${no}`).then(response => {\r\n                    if(response.data.success) {\r\n                        props.setDataSource(newData);\r\n                        window.scrollTo(0, 0)\r\n                    }\r\n                    Notifications(response.data)\r\n                })                \r\n            },\r\n            onCancel() {\r\n                return false;\r\n            }\r\n          });\r\n    }\r\n\r\n    const handleItem = (no) => {\r\n        props.setNo(no)\r\n        props.setView('item')\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n    const columns = [\r\n        {\r\n          title: '번호',\r\n          dataIndex: 'no',\r\n          key: 'no'\r\n        },\r\n        {\r\n          title: '제목',\r\n          dataIndex: 'title',\r\n          key: 'title',\r\n          render: (text,record) => <a href=\"#!\" onClick={()=>{handleItem(record.no)}}>{text}</a>\r\n        },\r\n        {\r\n          title: '',\r\n          key: 'action',\r\n          width: 100,\r\n          render: (_, record) => (\r\n            <Tooltip title=\"삭제\">\r\n                <Button onClick={()=>handleRemove(record.no)} shape=\"round\" icon={<DeleteOutlined />} />\r\n            </Tooltip>\r\n          ),\r\n        },\r\n    ];\r\n    \r\n    \r\n    return (\r\n        <React.Fragment>\r\n                <BackTop visibilityHeight={200} />\r\n                <div id=\"admin-cases-list-add\">\r\n                    <Tooltip title=\"새 데이터 추가\">\r\n                        <Button onClick={()=> props.setView('add')} shape=\"round\" icon={<PlusOutlined />} />\r\n                    </Tooltip>\r\n                </div>\r\n\r\n                {props.dataSource.length === 0 ? (<Null />) : \r\n                    (\r\n                    <div id=\"admin-cases-list-content\">\r\n                        <Table columns={columns} dataSource={props.dataSource} pagination={false} />\r\n                    </div>\r\n                     ) \r\n                }  \r\n               \r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default React.memo(List)\r\n","import React from 'react'\r\nimport axios from 'axios';\r\n\r\n\r\nimport {Button, Descriptions, Space,  Modal,  Tooltip} from 'antd';\r\nimport {ExclamationCircleOutlined, AppstoreOutlined, EditOutlined, DeleteOutlined} from '@ant-design/icons'\r\n\r\nimport Notifications from '../../../commons/Notifications'\r\n\r\nfunction Item(props) {\r\n    const [row, setRow] = React.useState(null);\r\n\r\n    const handleList = () => {\r\n        props.setView('list')\r\n        props.setNo(null);\r\n        window.scrollTo(0, 0)\r\n    }\r\n\r\n    const handleRemove = () => {\r\n        Modal.confirm({\r\n            title: '삭제하시겠습니까?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: '한번 삭제하면 복구가 어렵습니다.',\r\n            okText: '삭제',\r\n            okType: 'danger',\r\n            cancelText: '취소',\r\n            onOk() {\r\n                const newData = props.dataSource.filter( x => x.no !== props.no);\r\n                axios.delete(`/api/notices/${props.no}`).then(response => {\r\n                    if(response.data.success) {\r\n                        props.setDataSource(newData);\r\n                        props.setView('list')\r\n                        props.setNo(null);\r\n                        window.scrollTo(0, 0)\r\n                    }\r\n                    Notifications(response.data)\r\n                })                \r\n            },\r\n            onCancel() {\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        props.setRow(row);\r\n        props.setView('edit')\r\n        \r\n    }   \r\n\r\n    const fetchData = async () => {\r\n        const result = await (await axios.get(`/api/notices/${props.no}`)).data.data\r\n        setRow(result);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n     fetchData();       \r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div id=\"admin-cases-item-buttons\">\r\n                <Space>\r\n                    <Tooltip title=\"목록\">\r\n                        <Button onClick={()=>handleList()} shape=\"round\" icon={<AppstoreOutlined />} />\r\n                    </Tooltip>\r\n                    <Tooltip title=\"수정\">\r\n                        <Button onClick={()=>handleEdit()} shape=\"round\" icon={<EditOutlined />} />\r\n                    </Tooltip>\r\n                    <Tooltip title=\"삭제\">\r\n                        <Button onClick={()=>handleRemove()} shape=\"round\" icon={<DeleteOutlined />} />\r\n                    </Tooltip>\r\n                </Space>\r\n            </div>\r\n            {row !== null && (\r\n                <div id=\"admin-cases-item-container\"> \r\n                    <Descriptions size=\"small\" layout=\"horizontal\" bordered className=\"ant-descriptions-container\">\r\n                        {/* title */}\r\n                        <Descriptions.Item label=\"제목\" span={3}/*  className=\"ant-descriptions-item-text\" */>{row.title}</Descriptions.Item>\r\n                        \r\n                        {/* date */}\r\n                        <Descriptions.Item label=\"등록 날짜\" span={3} >{row.date}</Descriptions.Item>\r\n                    \r\n                        {/* content */}\r\n                        <Descriptions.Item label=\"내용\" /*  className=\"ant-descriptions-item-text\" */>\r\n                            <div>{row.content}</div>\r\n                        </Descriptions.Item>\r\n\r\n                    </Descriptions>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Item)\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { Button, Space, Tooltip, Form, Input} from 'antd';\r\nimport {AppstoreOutlined, PlusOutlined} from '@ant-design/icons'\r\n\r\n\r\nimport Notifications from '../../../commons/Notifications'\r\n\r\nfunction Add(props) {\r\n    const layout = {\r\n        labelCol: { span: 5 },\r\n        wrapperCol: { span: 20 }\r\n    };\r\n\r\n    const onFinish = (values) => {\r\n        axios.post('/api/notices', values).then(response => {\r\n            if(response.data.success) {\r\n                const oldData = props.dataSource;\r\n                const newData = response.data.row;\r\n                props.setDataSource([...oldData, newData]);\r\n                props.setView('list');\r\n            }\r\n            Notifications(response.data);\r\n        });\r\n    };\r\n\r\n    return ( \r\n        <>\r\n            <Form {...layout} name=\"nest-messages\" onFinish={onFinish}>\r\n                <div id=\"admin-cases-add-buttons\">\r\n                    <Space>\r\n                        <Tooltip title=\"목록\">\r\n                            <Button onClick={()=>{props.setView('list')}} shape=\"round\" icon={<AppstoreOutlined />} />\r\n                        </Tooltip>\r\n                        <Tooltip title=\"추가\">\r\n                            <Button htmlType=\"submit\" shape=\"round\" icon={<PlusOutlined />} />\r\n                        </Tooltip>\r\n                    </Space>\r\n                </div>\r\n                \r\n                <div id=\"admin-cases-add-container\">\r\n                    <div id=\"admin-cases-add-content\">\r\n                        <div id=\"admin-cases-add-form\">\r\n                            <Form.Item name='title' label=\"제목\" rules={[{ required: true, message: '제목을 입력해주세요' }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name='content' label=\"내용\" rules={[{ required: true, message: '내용을 입력해주세요' }]}>\r\n                                <Input.TextArea />\r\n                            </Form.Item>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Add)\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport { Button, Space, Tooltip, Form, Input } from 'antd';\r\nimport {AppstoreOutlined, ArrowDownOutlined} from '@ant-design/icons'\r\n\r\nimport Notifications from '../../../commons/Notifications'\r\n\r\nfunction Edit(props) {\r\n    const layout = {\r\n        labelCol: { span: 5 },\r\n        wrapperCol: { span: 20 }\r\n    };\r\n\r\n    const handleList = () => {\r\n        props.setView('list');\r\n        props.setRow(null);\r\n    }\r\n\r\n    const onFinish = (values) => {\r\n        axios.patch(`/api/notices/${props.row.no}`, values).then(response => {\r\n            if(response.data.success) {\r\n                props.setDataSource(response.data.row);\r\n                props.setView('list');\r\n                props.setRow(null);\r\n            }\r\n            Notifications(response.data);\r\n        });\r\n    };\r\n\r\n    // console.log(props.row)\r\n\r\n    return (\r\n        <>\r\n        <Form {...layout} name=\"nest-messages\" onFinish={onFinish}>\r\n            <div id=\"admin-cases-edit-buttons\">\r\n                <Space>\r\n                    <Tooltip title=\"목록\">\r\n                        <Button onClick={()=>{handleList()}} shape=\"round\" icon={<AppstoreOutlined />} />\r\n                    </Tooltip>\r\n                    <Tooltip title=\"저장\">\r\n                        <Button htmlType=\"submit\" shape=\"round\" icon={<ArrowDownOutlined />} />\r\n                    </Tooltip>\r\n                </Space>\r\n            </div>\r\n            \r\n            <div id=\"admin-cases-edit-container\">\r\n                <div id=\"admin-cases-edit-content\">\r\n                    <div id=\"admin-cases-edit-form\">\r\n                        <Form.Item name='title' label=\"제목\" rules={[{ required: true, message: '제목을 입력해주세요' }]} initialValue={props.row.title}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item name='content' label=\"내용\" rules={[{ required: true, message: '내용을 입력해주세요' }]} initialValue={props.row.content}>\r\n                            <Input.TextArea />\r\n                        </Form.Item>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Edit)\r\n","import React from 'react'\r\nimport axios from 'axios'\r\n\r\nimport Load from './NoticeComponents/Load'\r\nimport List from './NoticeComponents/List'\r\nimport Item from './NoticeComponents/Item'\r\nimport Add from './NoticeComponents/Add'\r\nimport Edit from './NoticeComponents/Edit'\r\n\r\nfunction AdminNoticePage() {\r\n    const [no, setNo] = React.useState(null);\r\n    const [view, setView] = React.useState('load');\r\n    const [dataSource, setDataSource] = React.useState([]);\r\n    const [row, setRow] = React.useState(null);\r\n\r\n    const fetchData = async () => {\r\n        const result = await (await axios.get('/api/notices')).data.data\r\n        setDataSource(result === undefined ? [] : result);\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        setTimeout(() => {\r\n            fetchData();\r\n            setView('list');\r\n        },300);\r\n        \r\n    }, [])\r\n    \r\n    switch (view) {\r\n        case 'load':\r\n            return <Load />\r\n        case 'list':\r\n            return <List setView={setView} dataSource={dataSource} setDataSource={setDataSource} no={no} setNo={setNo}/>\r\n         case 'item':\r\n            return <Item setView={setView} no={no} setNo={setNo} setRow={setRow} dataSource={dataSource} setDataSource={setDataSource} />\r\n        case 'add':\r\n            return <Add setView={setView} dataSource={dataSource} setDataSource={setDataSource} />\r\n        case 'edit': \r\n            window.scrollTo(0, 0);\r\n            return <Edit setView={setView} no={no} row={row} setRow={setRow} setNo={setNo} dataSource={dataSource} setDataSource={setDataSource} />\r\n        default:\r\n            // TODO: Mapping to error page\r\n            break;\r\n    }\r\n}\r\n\r\nexport default React.memo(AdminNoticePage)\r\n","import React from 'react'\r\nimport { Result, Button } from 'antd';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nfunction ErrorPage() {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div>\r\n            <Result status=\"500\" title=\"500\" subTitle=\"Sorry, something went wrong.\"\r\n                extra={<Button type=\"primary\" onClick={()=> history.push('/admin')}>Back Home</Button>}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default React.memo(ErrorPage)\r\n\r\n\r\n","import React from 'react';\r\nimport { BrowserRouter as Router ,Route, Switch } from \"react-router-dom\";\r\nimport { Layout, Row, Col, Typography} from 'antd';\r\nimport {SlidersOutlined} from '@ant-design/icons'\r\n\r\nimport Nav from './views/page/AdminPage/Section/Nav';\r\nimport Sider from './views/page/AdminPage/Section/Sider';\r\n\r\nimport AdminLandingPage from \"./views/page/AdminPage/AdminLandingPage\";\r\nimport AdminElementPage from './views/page/AdminPage/AdminElementPage'\r\nimport AdminCasePage from './views/page/AdminPage/AdminCasePage'\r\nimport AdminSlidePage from './views/page/AdminPage/AdminSlidePage'\r\nimport AdminOrderPage from './views/page/AdminPage/AdminOrderPage'\r\nimport AdminNoticePage from './views/page/AdminPage/AdminNoticePage'\r\n\r\nimport ErrorPage from './views/page/AdminPage/ErrorPage'\r\n\r\nimport './css/admin.css';\r\n\r\nconst data = [\r\n    {elements : \"필터\"},\r\n    {cases : \"케이스\"},\r\n    {slides : \"메인 슬라이드 뷰\"},\r\n    {notice : \"공지사항\"},\r\n    {orders: \"견적문의\" }\r\n];\r\n\r\nfunction Admin() {\r\n    return (\r\n        <>\r\n         <Layout>\r\n            <Nav />\r\n\r\n            <Layout.Content id=\"admin-body-container\">\r\n                <div id=\"admin-body-content\">\r\n                    <Row id=\"admin-body-content-row\">\r\n                    <Router>\r\n                        <Col span={5}>\r\n                            <Sider data={data} />   \r\n                        </Col>\r\n\r\n                        <Col span={19} id=\"admin-body-col-right\">\r\n                            <Switch>\r\n                                <Route exact path=\"/admin\" component={AdminLandingPage}/>\r\n                                <Route path=\"/admin/elements\" component={AdminElementPage} />\r\n                                <Route path=\"/admin/cases\" render={()=> (\r\n                                        <>\r\n                                            <Typography.Title level={2}><SlidersOutlined /> 케이스 관리</Typography.Title>\r\n                                            <div id=\"admin-cases-container\">\r\n                                                <AdminCasePage />\r\n                                            </div>\r\n                                            \r\n                                        </>\r\n                                    )}\r\n                                />\r\n                                <Route path=\"/admin/slides\" render={()=> (\r\n                                        <>\r\n                                            <Typography.Title level={2}><SlidersOutlined /> 메인 슬라이드 뷰 관리</Typography.Title>\r\n                                            <div id=\"admin-slides-container\">\r\n                                                <AdminSlidePage />\r\n                                            </div>\r\n                                            \r\n                                        </>\r\n                                    )}\r\n                                />\r\n                                <Route path=\"/admin/notice\" render={()=> (\r\n                                        <>\r\n                                            <Typography.Title level={2}><SlidersOutlined /> 공지사항 관리</Typography.Title>\r\n                                            <div id=\"admin-qna-container\">\r\n                                                <AdminNoticePage />\r\n                                            </div>\r\n                                            \r\n                                        </>\r\n                                    )}\r\n                                />\r\n                                <Route path=\"/admin/orders\" render={()=> (\r\n                                        <>\r\n                                            <Typography.Title level={2}><SlidersOutlined /> 견적문의 관리</Typography.Title>\r\n                                            <div id=\"admin-order-container\">\r\n                                                <AdminOrderPage />\r\n                                            </div>\r\n                                            \r\n                                        </>\r\n                                    )}\r\n                                />\r\n\r\n                                <Route component={ErrorPage} />\r\n                            </Switch>\r\n                        </Col>\r\n                    </Router>\r\n                    </Row>\r\n                </div>\r\n            </Layout.Content>\r\n         </Layout>\r\n        </>\r\n        \r\n    );\r\n}\r\n\r\nexport default React.memo(Admin);","import React, {  Suspense, useState } from 'react';\nimport { useLocation } from \"react-router-dom\";\n\nimport User from './User'\nimport Admin from './Admin';\n\nfunction App() {\n  const [IsAdmin, setIsAdmin] = useState();\n  const pathname = useLocation().pathname;\n  \n  const checkAdmin = (pathname) => {\n    pathname.split(\"/\").indexOf(\"admin\") !== -1 ? \n    setIsAdmin(true) : setIsAdmin(false);\n  }\n\n  React.useEffect(() => {\n    checkAdmin(pathname);\n  }, [pathname]);\n\n\n\n  return (\n    <Suspense fallback={<div>Loading...</div>}>\n      {IsAdmin !== undefined && (IsAdmin === false ? <User /> : <Admin />) }\n    </Suspense>\n  );\n\n  \n}\nexport default React.memo(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { combineReducers } from 'redux';\nimport user from './user_reducer';\n\nconst rootReducer = combineReducers({\n    user,\n});\n\nexport default rootReducer;","import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'core-js';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport Reducer from './_reducers';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport promiseMiddleware from 'redux-promise';\nimport ReduxThunk from 'redux-thunk';\n\nconst createStoreWithMiddleware = applyMiddleware(promiseMiddleware, ReduxThunk)(createStore);\n\nReactDOM.render(\n    <Provider\n        store={createStoreWithMiddleware(\n            Reducer,\n            window.__REDUX_DEVTOOLS_EXTENSION__ &&\n            window.__REDUX_DEVTOOLS_EXTENSION__()\n        )}\n    >\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}