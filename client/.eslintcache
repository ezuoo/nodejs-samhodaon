[{"D:\\nodejs-samhodaon\\client\\src\\index.js":"1","D:\\nodejs-samhodaon\\client\\src\\reportWebVitals.js":"2","D:\\nodejs-samhodaon\\client\\src\\components\\App.js":"3","D:\\nodejs-samhodaon\\client\\src\\components\\views\\LoginPage\\LoginPage.js":"4","D:\\nodejs-samhodaon\\client\\src\\components\\views\\LandingPage\\LandingPage.js":"5","D:\\nodejs-samhodaon\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js":"6","D:\\nodejs-samhodaon\\client\\src\\hoc\\auth.js":"7","D:\\nodejs-samhodaon\\client\\src\\components\\views\\Footer\\Footer.js":"8","D:\\nodejs-samhodaon\\client\\src\\components\\views\\NavBar\\NavBar.js":"9","D:\\nodejs-samhodaon\\client\\src\\_actions\\user_actions.js":"10","D:\\nodejs-samhodaon\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js":"11","D:\\nodejs-samhodaon\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js":"12","D:\\nodejs-samhodaon\\client\\src\\components\\Config.js":"13","D:\\nodejs-samhodaon\\client\\src\\_actions\\types.js":"14","D:\\nodejs-samhodaon\\client\\src\\_reducers\\index.js":"15","D:\\nodejs-samhodaon\\client\\src\\_reducers\\user_reducer.js":"16","D:\\nodejs-samhodaon\\client\\src\\serviceWorker.js":"17","D:\\nodejs-samhodaon\\client\\src\\components\\views\\AdminPage\\AdminPage.js":"18","D:\\nodejs-samhodaon\\client\\src\\components\\views\\GridCard\\GridCard.js":"19","D:\\nodejs-samhodaon\\client\\src\\components\\views\\CasePage\\CaseManyPage.js":"20","D:\\nodejs-samhodaon\\client\\src\\components\\views\\CasePage\\CaseOnePage.js":"21"},{"size":1189,"mtime":1610990465214,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":1382,"mtime":1611000115348,"results":"25","hashOfConfig":"23"},{"size":5082,"mtime":1610988422167,"results":"26","hashOfConfig":"23"},{"size":1047,"mtime":1610456324644,"results":"27","hashOfConfig":"23"},{"size":6254,"mtime":1596558498000,"results":"28","hashOfConfig":"23"},{"size":1455,"mtime":1596558498000,"results":"29","hashOfConfig":"23"},{"size":398,"mtime":1610360606890,"results":"30","hashOfConfig":"23"},{"size":1355,"mtime":1610360803770,"results":"31","hashOfConfig":"23"},{"size":1034,"mtime":1596558498000,"results":"32","hashOfConfig":"23"},{"size":1095,"mtime":1596558498000,"results":"33","hashOfConfig":"23"},{"size":947,"mtime":1610999215224,"results":"34","hashOfConfig":"23"},{"size":57,"mtime":1596558498000,"results":"35","hashOfConfig":"23"},{"size":166,"mtime":1596558498000,"results":"36","hashOfConfig":"23"},{"size":157,"mtime":1596558498000,"results":"37","hashOfConfig":"23"},{"size":533,"mtime":1596558498000,"results":"38","hashOfConfig":"23"},{"size":4951,"mtime":1610361811706,"results":"39","hashOfConfig":"23"},{"size":1245,"mtime":1610988018053,"results":"40","hashOfConfig":"23"},{"size":949,"mtime":1611000018747,"results":"41","hashOfConfig":"23"},{"size":1755,"mtime":1610999386784,"results":"42","hashOfConfig":"23"},{"size":689,"mtime":1611000687695,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1314mdy",{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"54"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"54"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\nodejs-samhodaon\\client\\src\\index.js",[],"D:\\nodejs-samhodaon\\client\\src\\reportWebVitals.js",[],["93","94"],"D:\\nodejs-samhodaon\\client\\src\\components\\App.js",[],"D:\\nodejs-samhodaon\\client\\src\\components\\views\\LoginPage\\LoginPage.js",["95","96"],"import React, { useState } from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { loginUser } from \"../../../_actions/user_actions\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Input, Button, Checkbox, Typography } from 'antd';\nimport { useDispatch } from \"react-redux\";\nimport {UserOutlined , LockOutlined} from '@ant-design/icons';\nconst { Title } = Typography;\n\nfunction LoginPage(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem(\"rememberMe\") ? true : false;\n\n  const [formErrorMessage, setFormErrorMessage] = useState('')\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked)\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe)\n  };\n\n  const initialEmail = localStorage.getItem(\"rememberMe\") ? localStorage.getItem(\"rememberMe\") : '';\n\n  return (\n    <Formik\n      initialValues={{\n        email: initialEmail,\n        password: '',\n      }}\n      validationSchema={Yup.object().shape({\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password\n          };\n\n          dispatch(loginUser(dataToSubmit))\n            .then(response => {\n              if (response.payload.loginSuccess) {\n                window.localStorage.setItem('userId', response.payload.userId);\n                if (rememberMe === true) {\n                  window.localStorage.setItem('rememberMe', values.id);\n                } else {\n                  localStorage.removeItem('rememberMe');\n                }\n                props.history.push(\"/\");\n              } else {\n                setFormErrorMessage('Check out your Account or Password again')\n              }\n            })\n            .catch(err => {\n              setFormErrorMessage('Check out your Account or Password again')\n              setTimeout(() => {\n                setFormErrorMessage(\"\")\n              }, 3000);\n            });\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n\n            <Title level={2}>Log In</Title>\n            <form onSubmit={handleSubmit} style={{ width: '350px' }}>\n\n              <Form.Item required>\n                <Input\n                  id=\"email\"\n                  prefix={<UserOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required>\n                <Input\n                  id=\"password\"\n                  prefix={<LockOutlined style={{ color: 'rgba(0,0,0,.25)' }} />}\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              {formErrorMessage && (\n                <label ><p style={{ color: '#ff0000bf', fontSize: '0.7rem', border: '1px solid', padding: '1rem', borderRadius: '10px' }}>{formErrorMessage}</p></label>\n              )}\n\n              <Form.Item>\n                <Checkbox id=\"rememberMe\" onChange={handleRememberMe} checked={rememberMe} >Remember me</Checkbox>\n                <a className=\"login-form-forgot\" href=\"/reset_user\" style={{ float: 'right' }}>\n                  forgot password\n                  </a>\n                <div>\n                  <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" style={{ minWidth: '100%' }} disabled={isSubmitting} onSubmit={handleSubmit}>\n                    Log in\n                </Button>\n                </div>\n              </Form.Item>\n            </form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\nexport default withRouter(LoginPage);\n\n\n",["97","98"],"D:\\nodejs-samhodaon\\client\\src\\components\\views\\LandingPage\\LandingPage.js",[],"D:\\nodejs-samhodaon\\client\\src\\components\\views\\RegisterPage\\RegisterPage.js",["99","100"],"import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","D:\\nodejs-samhodaon\\client\\src\\hoc\\auth.js",["101"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n",["102","103"],"D:\\nodejs-samhodaon\\client\\src\\components\\views\\Footer\\Footer.js",[],"D:\\nodejs-samhodaon\\client\\src\\components\\views\\NavBar\\NavBar.js",[],"D:\\nodejs-samhodaon\\client\\src\\_actions\\user_actions.js",[],"D:\\nodejs-samhodaon\\client\\src\\components\\views\\NavBar\\Sections\\RightMenu.js",[],"D:\\nodejs-samhodaon\\client\\src\\components\\views\\NavBar\\Sections\\LeftMenu.js",["104","105"],"D:\\nodejs-samhodaon\\client\\src\\components\\Config.js",[],"D:\\nodejs-samhodaon\\client\\src\\_actions\\types.js",[],"D:\\nodejs-samhodaon\\client\\src\\_reducers\\index.js",[],"D:\\nodejs-samhodaon\\client\\src\\_reducers\\user_reducer.js",["106"],"import {\n    LOGIN_USER,\n    REGISTER_USER,\n    AUTH_USER,\n    LOGOUT_USER,\n} from '../_actions/types';\n \n\nexport default function(state={},action){\n    switch(action.type){\n        case REGISTER_USER:\n            return {...state, register: action.payload }\n        case LOGIN_USER:\n            return { ...state, loginSucces: action.payload }\n        case AUTH_USER:\n            return {...state, userData: action.payload }\n        case LOGOUT_USER:\n            return {...state }\n        default:\n            return state;\n    }\n}","D:\\nodejs-samhodaon\\client\\src\\serviceWorker.js",[],"D:\\nodejs-samhodaon\\client\\src\\components\\views\\AdminPage\\AdminPage.js",[],"D:\\nodejs-samhodaon\\client\\src\\components\\views\\GridCard\\GridCard.js",[],"D:\\nodejs-samhodaon\\client\\src\\components\\views\\CasePage\\CaseManyPage.js",[],"D:\\nodejs-samhodaon\\client\\src\\components\\views\\CasePage\\CaseOnePage.js",[],{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":74,"column":11,"nodeType":"113","messageId":"114","endLine":74,"endColumn":16},{"ruleId":"111","severity":1,"message":"115","line":79,"column":11,"nodeType":"113","messageId":"114","endLine":79,"endColumn":22},{"ruleId":"107","replacedBy":"116"},{"ruleId":"109","replacedBy":"117"},{"ruleId":"111","severity":1,"message":"112","line":92,"column":11,"nodeType":"113","messageId":"114","endLine":92,"endColumn":16},{"ruleId":"111","severity":1,"message":"115","line":97,"column":11,"nodeType":"113","messageId":"114","endLine":97,"endColumn":22},{"ruleId":"118","severity":1,"message":"119","line":6,"column":1,"nodeType":"120","endLine":42,"endColumn":2},{"ruleId":"107","replacedBy":"121"},{"ruleId":"109","replacedBy":"122"},{"ruleId":"111","severity":1,"message":"123","line":5,"column":7,"nodeType":"113","messageId":"114","endLine":5,"endColumn":14},{"ruleId":"111","severity":1,"message":"124","line":6,"column":7,"nodeType":"113","messageId":"114","endLine":6,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":9,"column":1,"nodeType":"120","endLine":22,"endColumn":2},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'dirty' is assigned a value but never used.","Identifier","unusedVar","'handleReset' is assigned a value but never used.",["125"],["126"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["125"],["126"],"'SubMenu' is assigned a value but never used.","'MenuItemGroup' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]